import { EntityInfo, EnergyDashboardConfig } from './types';
export declare class EnergyDashboardEntityCard extends HTMLElement {
    static get cardType(): string;
    static get displayName(): string;
    static get description(): string;
    static get icon(): string;
    static getConfigElement(): HTMLElement;
    static getStubConfig(): object;
    private _root;
    _hass: any;
    config: EnergyDashboardConfig | undefined;
    powerEntities: EntityInfo[];
    energyEntities: EntityInfo[];
    entityToggleStates: Record<string, boolean>;
    energyEntityToggleStates: Record<string, boolean>;
    private _initialized;
    private _energyInitialized;
    private powerScrollPosition;
    private energyScrollPosition;
    private viewMode;
    private litLoaded;
    private powerContainerRef?;
    private energyContainerRef?;
    constructor();
    set hass(hass: any);
    get hass(): any;
    loadLitLibraries(): Promise<void>;
    requestUpdate(): void;
    private _render;
    private _createModeToggle;
    private _createControlButtons;
    private _createPersistenceToggle;
    private _createEntityItem;
    connectedCallback(): void;
    disconnectedCallback(): void;
    setConfig(config: EnergyDashboardConfig): void;
    getCardSize(): number;
    private _saveScrollPositions;
    private _updateEntities;
    private _updatePowerEntities;
    private _updateEnergyEntities;
    private _initializePowerToggleStates;
    private _initializeEnergyToggleStates;
    private _savePowerToggleStates;
    private _saveEnergyToggleStates;
    private _resetToPowerDefaultEntities;
    private _clearAllPowerEntities;
    private _selectAllPowerEntities;
    private _togglePowerEntity;
    private _resetToEnergyDefaultEntities;
    private _clearAllEnergyEntities;
    private _selectAllEnergyEntities;
    private _toggleEnergyEntity;
    private _togglePersistence;
    private _loadPersistenceState;
    private _savePersistenceState;
    private _saveViewMode;
    private _loadViewMode;
    private _toggleViewMode;
}
