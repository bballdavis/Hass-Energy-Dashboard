{"version":3,"file":"energy-dashboard.js","sources":["src/entity-utils.ts","src/energy-dashboard-entity-card.ts","src/energy-dashboard-entity-card-editor.ts"],"sourcesContent":["import { EntityInfo } from './types';\r\n\r\nexport function getPowerEntities(hass: any): EntityInfo[] {\r\n  return Object.keys(hass.states)\r\n    .filter(entityId => {\r\n      const stateObj = hass.states[entityId];\r\n      return stateObj && stateObj.attributes &&\r\n        (stateObj.attributes.unit_of_measurement === 'W' ||\r\n         stateObj.attributes.unit_of_measurement === 'kW');\r\n    })\r\n    .map(entityId => {\r\n      const stateObj = hass.states[entityId];\r\n      const domain = entityId.split('.')[0];\r\n      const isToggleable = ['switch', 'light', 'input_boolean', 'fan', 'automation'].includes(domain);\r\n\r\n      let powerValue = 0;\r\n      try {\r\n        if (stateObj.attributes.unit_of_measurement === 'kW') {\r\n          powerValue = parseFloat(stateObj.state) * 1000;\r\n        } else {\r\n          powerValue = parseFloat(stateObj.state) || 0;\r\n        }\r\n      } catch {\r\n        powerValue = 0;\r\n      }\r\n\r\n      return {\r\n        entityId,\r\n        name: stateObj.attributes.friendly_name || entityId,\r\n        state: stateObj.state,\r\n        unit: stateObj.attributes.unit_of_measurement,\r\n        powerValue,\r\n        isToggleable\r\n      };\r\n    })\r\n    .sort((a, b) => b.powerValue! - a.powerValue!);\r\n}\r\n\r\nexport function getEnergyEntities(hass: any): EntityInfo[] {\r\n  return Object.keys(hass.states)\r\n    .filter(entityId => {\r\n      const stateObj = hass.states[entityId];\r\n      return stateObj && stateObj.attributes &&\r\n        (stateObj.attributes.unit_of_measurement === 'Wh' ||\r\n         stateObj.attributes.unit_of_measurement === 'kWh');\r\n    })\r\n    .map(entityId => {\r\n      const stateObj = hass.states[entityId];\r\n      const domain = entityId.split('.')[0];\r\n      const isToggleable = ['switch', 'light', 'input_boolean', 'fan', 'automation'].includes(domain);\r\n\r\n      let energyValue = 0;\r\n      try {\r\n        if (stateObj.attributes.unit_of_measurement === 'Wh') {\r\n          energyValue = parseFloat(stateObj.state) / 1000;\r\n        } else {\r\n          energyValue = parseFloat(stateObj.state) || 0;\r\n        }\r\n      } catch {\r\n        energyValue = 0;\r\n      }\r\n\r\n      return {\r\n        entityId,\r\n        name: stateObj.attributes.friendly_name || entityId,\r\n        state: stateObj.state,\r\n        unit: stateObj.attributes.unit_of_measurement,\r\n        energyValue,\r\n        isToggleable\r\n      };\r\n    })\r\n    .sort((a, b) => b.energyValue! - a.energyValue!);\r\n}\r\n\r\nexport function loadToggleStates(key: string): Record<string, boolean> | null {\r\n  try {\r\n    const stored = localStorage.getItem(key);\r\n    return stored ? JSON.parse(stored) : null;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function saveToggleStates(states: Record<string, boolean>, key: string): void {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(states));\r\n  } catch {\r\n    try {\r\n      const reducedStates: Record<string, boolean> = {};\r\n      Object.keys(states).forEach(k => {\r\n        if (states[k]) reducedStates[k] = true;\r\n      });\r\n      localStorage.setItem(key, JSON.stringify(reducedStates));\r\n    } catch {}\r\n  }\r\n}","import { LitElement, html, css, PropertyValues } from 'lit';\r\nimport { EntityInfo, EnergyDashboardConfig } from './types';\r\nimport { getPowerEntities, getEnergyEntities, loadToggleStates, saveToggleStates } from './entity-utils';\r\n\r\nexport class EnergyDashboardEntityCard extends LitElement {\r\n  // Add explicit property declarations to resolve TypeScript errors\r\n  hass: any;\r\n  config?: EnergyDashboardConfig;\r\n  powerEntities: EntityInfo[] = [];\r\n  energyEntities: EntityInfo[] = [];\r\n  entityToggleStates: Record<string, boolean> = {};\r\n  energyEntityToggleStates: Record<string, boolean> = {};\r\n  private _initialized: boolean = false;\r\n  private _energyInitialized: boolean = false;\r\n\r\n  static get properties() {\r\n    return {\r\n      hass: { type: Object },\r\n      config: { type: Object },\r\n      powerEntities: { type: Array },\r\n      energyEntities: { type: Array },\r\n      entityToggleStates: { type: Object },\r\n      energyEntityToggleStates: { type: Object }\r\n    };\r\n  }\r\n\r\n  static get styles() {\r\n    return css`\r\n      :host {\r\n        --card-padding: 16px;\r\n        --entity-height: 12px;\r\n        --entity-width: 240px;\r\n        --button-height: 32px;\r\n        --entity-font-size: 0.95em;\r\n        --section-title-font-size: 0.9975em;\r\n      }\r\n      .card-header {\r\n        padding: var(--card-padding);\r\n        font-family: var(--paper-font-headline_-_font-family);\r\n        -webkit-font-smoothing: var(--paper-font-headline_-_-webkit-font-smoothing);\r\n        font-size: var(--paper-font-headline_-_font-size);\r\n        font-weight: var(--paper-font-headline_-_font-weight);\r\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\r\n        line-height: var(--paper-font-headline_-_line-height);\r\n        color: var(--ha-card-header-color, --primary-text-color);\r\n      }\r\n      .control-buttons {\r\n        padding: 0 var(--card-padding) 8px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n      }\r\n      .control-button {\r\n        background-color: var(--secondary-background-color);\r\n        border: none;\r\n        border-radius: 8px;\r\n        padding: 6px 12px;\r\n        color: var(--primary-text-color);\r\n        font-size: 0.9em;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        transition: background-color 0.3s ease;\r\n        flex: 1;\r\n        margin: 0 4px;\r\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);\r\n        height: var(--button-height);\r\n        min-height: var(--button-height);\r\n        box-sizing: border-box;\r\n      }\r\n      .control-button:first-child {\r\n        margin-left: 0;\r\n      }\r\n      .control-button:last-child {\r\n        margin-right: 0;\r\n      }\r\n      .control-button:hover {\r\n        background-color: var(--primary-color);\r\n        color: var(--text-primary-color);\r\n      }\r\n      .control-button ha-icon {\r\n        margin-right: 4px;\r\n        --mdc-icon-size: 18px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n      .section-title {\r\n        padding: 6px var(--card-padding);\r\n        font-size: var(--section-title-font-size);\r\n        font-weight: 500;\r\n        color: var(--primary-text-color);\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n      .entities-container {\r\n        padding: 0 var(--card-padding) var(--card-padding);\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 8px;\r\n        justify-content: flex-start;\r\n        overflow-y: auto;\r\n        scrollbar-width: thin;\r\n        scrollbar-color: var(--scrollbar-thumb-color) transparent;\r\n        width: calc(100% - (var(--card-padding) * 2));\r\n        box-sizing: border-box;\r\n        min-width: 100%;\r\n      }\r\n      .entities-container::-webkit-scrollbar {\r\n        width: 6px;\r\n      }\r\n      .entities-container::-webkit-scrollbar-track {\r\n        background: transparent;\r\n      }\r\n      .entities-container::-webkit-scrollbar-thumb {\r\n        background-color: var(--scrollbar-thumb-color, var(--divider-color, #e0e0e0));\r\n        border-radius: 3px;\r\n      }\r\n      .entity-item {\r\n        background-color: var(--ha-card-background, var(--card-background-color, white));\r\n        border-radius: 12px;\r\n        padding: 8px 16px;\r\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n        cursor: pointer;\r\n        transition: all 0.3s ease;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        height: auto;\r\n        min-height: var(--entity-height);\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        flex-grow: 1;\r\n        flex-shrink: 0;\r\n        min-width: 100%;\r\n        max-width: 100%;\r\n        margin-bottom: 2px;\r\n      }\r\n      .entity-item:hover {\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n        transform: translateY(-1px);\r\n      }\r\n      .entity-item.on {\r\n        background-color: var(--primary-color);\r\n        color: var(--text-primary-color);\r\n      }\r\n      .entity-left {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        flex: 3;\r\n        min-width: 0;\r\n        margin-top: -1px;\r\n        margin-bottom: -1px;\r\n      }\r\n      .entity-name {\r\n        font-weight: bold;\r\n        font-size: 0.95em;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        max-width: 100%;\r\n        flex: 1;\r\n        margin-right: 16px;\r\n      }\r\n      .entity-state {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-end;\r\n        min-width: 85px;\r\n        max-width: 85px;\r\n        white-space: nowrap;\r\n        flex: 0 0 auto;\r\n        font-size: 0.95em;\r\n      }\r\n      .power-value {\r\n        font-weight: 500;\r\n      }\r\n      .empty-message {\r\n        padding: var(--card-padding);\r\n        text-align: center;\r\n        color: var(--secondary-text-color);\r\n      }\r\n      .section-separator {\r\n        height: 1px;\r\n        background-color: var(--divider-color, #e0e0e0);\r\n        margin: 12px var(--card-padding) 8px;\r\n        opacity: 0.6;\r\n      }\r\n    `;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.powerEntities = [];\r\n    this.energyEntities = [];\r\n    this.entityToggleStates = {};\r\n    this.energyEntityToggleStates = {};\r\n    this._initialized = false;\r\n    this._energyInitialized = false;\r\n  }\r\n\r\n  setConfig(config: EnergyDashboardConfig) {\r\n    if (!config) {\r\n      throw new Error(\"Invalid configuration\");\r\n    }\r\n    // Create a merged config object correctly by spreading config first\r\n    this.config = {\r\n      ...config,\r\n      // Then set defaults only for missing properties\r\n      title: config.title ?? 'Energy Dashboard',\r\n      show_header: config.show_header ?? true,\r\n      show_state: config.show_state ?? true,\r\n      show_toggle: config.show_toggle ?? true,\r\n      auto_select_count: config.auto_select_count ?? 6,\r\n      max_height: config.max_height ?? 400,\r\n      show_energy_section: config.show_energy_section ?? true,\r\n      energy_auto_select_count: config.energy_auto_select_count ?? 6,\r\n    };\r\n  }\r\n\r\n  static getConfigElement() {\r\n    return document.createElement('energy-dashboard-entity-card-editor');\r\n  }\r\n\r\n  static getStubConfig() {\r\n    return {\r\n      title: 'Energy Dashboard',\r\n      show_header: true,\r\n      show_state: true,\r\n      show_toggle: true,\r\n      auto_select_count: 6,\r\n      max_height: 400,\r\n      show_energy_section: true,\r\n      energy_auto_select_count: 6\r\n    };\r\n  }\r\n\r\n  getCardSize() {\r\n    let rows = 0;\r\n\r\n    if (this.powerEntities && this.powerEntities.length > 0) {\r\n      rows += this.powerEntities.length * 0.7;\r\n      rows += 2;\r\n    }\r\n\r\n    if (this.config?.show_energy_section && this.energyEntities && this.energyEntities.length > 0) {\r\n      rows += this.energyEntities.length * 0.7;\r\n      rows += 2;\r\n    }\r\n\r\n    return rows > 0 ? rows : 1;\r\n  }\r\n\r\n  updated(changedProps: PropertyValues) {\r\n    if (changedProps.has('hass')) {\r\n      this._updateEntities();\r\n    }\r\n  }\r\n\r\n  _updateEntities() {\r\n    if (!this.hass) return;\r\n\r\n    try {\r\n      this._updatePowerEntities();\r\n      if (this.config?.show_energy_section) {\r\n        this._updateEnergyEntities();\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error updating entities:\", e);\r\n    }\r\n  }\r\n\r\n  _updatePowerEntities() {\r\n    const newPowerEntities = getPowerEntities(this.hass);\r\n    if (!this._initialized || Object.keys(this.entityToggleStates).length === 0) {\r\n      this._initializePowerToggleStates(newPowerEntities);\r\n      this._initialized = true;\r\n    }\r\n    this.powerEntities = newPowerEntities.map(entity => ({\r\n      ...entity,\r\n      isOn: this.entityToggleStates[entity.entityId] || false\r\n    }));\r\n    this._savePowerToggleStates();\r\n  }\r\n\r\n  _updateEnergyEntities() {\r\n    const newEnergyEntities = getEnergyEntities(this.hass);\r\n    if (!this._energyInitialized || Object.keys(this.energyEntityToggleStates).length === 0) {\r\n      this._initializeEnergyToggleStates(newEnergyEntities);\r\n      this._energyInitialized = true;\r\n    }\r\n    this.energyEntities = newEnergyEntities.map(entity => ({\r\n      ...entity,\r\n      isOn: this.energyEntityToggleStates[entity.entityId] || false\r\n    }));\r\n    this._saveEnergyToggleStates();\r\n  }\r\n\r\n  _initializePowerToggleStates(entities: EntityInfo[]) {\r\n    const savedStates = loadToggleStates('energy-dashboard-power-toggle-states');\r\n    if (savedStates && Object.keys(savedStates).length > 0) {\r\n      this.entityToggleStates = savedStates;\r\n    } else {\r\n      const toggleStates: Record<string, boolean> = {};\r\n      // Safely handle potentially undefined config or auto_select_count\r\n      const count = this.config?.auto_select_count ?? 6;\r\n      entities.slice(0, count).forEach(entity => {\r\n        toggleStates[entity.entityId] = true;\r\n      });\r\n      this.entityToggleStates = toggleStates;\r\n    }\r\n  }\r\n\r\n  _initializeEnergyToggleStates(entities: EntityInfo[]) {\r\n    const savedStates = loadToggleStates('energy-dashboard-energy-toggle-states');\r\n    if (savedStates && Object.keys(savedStates).length > 0) {\r\n      this.energyEntityToggleStates = savedStates;\r\n    } else {\r\n      const toggleStates: Record<string, boolean> = {};\r\n      // Safely handle potentially undefined config or energy_auto_select_count\r\n      const count = this.config?.energy_auto_select_count ?? 6;\r\n      entities.slice(0, count).forEach(entity => {\r\n        toggleStates[entity.entityId] = true;\r\n      });\r\n      this.energyEntityToggleStates = toggleStates;\r\n    }\r\n  }\r\n\r\n  _savePowerToggleStates() {\r\n    saveToggleStates(this.entityToggleStates, 'energy-dashboard-power-toggle-states');\r\n  }\r\n\r\n  _saveEnergyToggleStates() {\r\n    saveToggleStates(this.energyEntityToggleStates, 'energy-dashboard-energy-toggle-states');\r\n  }\r\n\r\n  _resetToPowerDefaultEntities() {\r\n    // reset power entities to default selection\r\n    this._initializePowerToggleStates(getPowerEntities(this.hass));\r\n    this._updatePowerEntities();\r\n  }\r\n\r\n  _clearAllPowerEntities() {\r\n    // clear power entity selection\r\n    this.entityToggleStates = {};\r\n    this._updatePowerEntities();\r\n  }\r\n\r\n  _selectAllPowerEntities() {\r\n    // select all power entities\r\n    const entities = getPowerEntities(this.hass);\r\n    entities.forEach(entity => {\r\n      this.entityToggleStates[entity.entityId] = true;\r\n    });\r\n    this._updatePowerEntities();\r\n  }\r\n\r\n  _togglePowerEntity(e: Event) {\r\n    const target = e.currentTarget as HTMLElement;\r\n    const entityId = target.dataset.entity;\r\n    if (entityId) {\r\n      this.entityToggleStates[entityId] = !this.entityToggleStates[entityId];\r\n      this._updatePowerEntities();\r\n    }\r\n  }\r\n\r\n  _resetToEnergyDefaultEntities() {\r\n    // reset energy entities to default selection\r\n    this._initializeEnergyToggleStates(getEnergyEntities(this.hass));\r\n    this._updateEnergyEntities();\r\n  }\r\n\r\n  _clearAllEnergyEntities() {\r\n    // clear energy entity selection\r\n    this.energyEntityToggleStates = {};\r\n    this._updateEnergyEntities();\r\n  }\r\n\r\n  _selectAllEnergyEntities() {\r\n    // select all energy entities\r\n    const entities = getEnergyEntities(this.hass);\r\n    entities.forEach(entity => {\r\n      this.energyEntityToggleStates[entity.entityId] = true;\r\n    });\r\n    this._updateEnergyEntities();\r\n  }\r\n\r\n  _toggleEnergyEntity(e: Event) {\r\n    const target = e.currentTarget as HTMLElement;\r\n    const entityId = target.dataset.entity;\r\n    if (entityId) {\r\n      this.energyEntityToggleStates[entityId] = !this.energyEntityToggleStates[entityId];\r\n      this._updateEnergyEntities();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.hass || !this.config) {\r\n      return html`<ha-card><div class=\"empty-message\">Card not configured</div></ha-card>`;\r\n    }\r\n\r\n    const containerStyle = this.config.max_height > 0 ? \r\n      `max-height: ${Math.min(this.config.max_height, 400)}px; overflow-y: auto;` : '';\r\n\r\n    return html`\r\n      <ha-card>\r\n        ${this.config.show_header ? html`\r\n          <div class=\"card-header\">${this.config.title}</div>\r\n        ` : ''}\r\n        \r\n        ${this.powerEntities.length > 0 ? html`\r\n          <div class=\"control-buttons\">\r\n            <button class=\"control-button\" @click=\"${this._resetToPowerDefaultEntities}\">\r\n              <ha-icon icon=\"mdi:refresh\"></ha-icon>\r\n              <span>Reset</span>\r\n            </button>\r\n            <button class=\"control-button\" @click=\"${this._clearAllPowerEntities}\">\r\n              <ha-icon icon=\"mdi:close-circle-outline\"></ha-icon>\r\n              <span>Clear</span>\r\n            </button>\r\n            <button class=\"control-button\" @click=\"${this._selectAllPowerEntities}\">\r\n              <ha-icon icon=\"mdi:check-circle-outline\"></ha-icon>\r\n              <span>Select All</span>\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"section-title\">Power Entities</div>\r\n          \r\n          <div style=\"width: 100%; box-sizing: border-box;\">\r\n            <div class=\"entities-container\" style=\"${containerStyle}\">\r\n              ${this.powerEntities.map(entity => html`\r\n                <div \r\n                  class=\"entity-item ${entity.isOn ? 'on' : 'off'}\"\r\n                  data-entity=\"${entity.entityId}\"\r\n                  @click=\"${this._togglePowerEntity}\"\r\n                  style=\"gap: 4px;\"\r\n                >\r\n                  <div class=\"entity-left\">\r\n                    <div class=\"entity-name\" title=\"${entity.name}\">${entity.name}</div>\r\n                  </div>\r\n                  <div class=\"entity-state\">\r\n                    <div class=\"status-indicator\">${entity.isToggleable ? (entity.isOn ? 'ON' : 'OFF') : ''}</div>\r\n                    <div class=\"power-value\">${this.config?.show_state ? \r\n                      `${entity.unit === 'kW' ? entity.state : Math.round(entity.powerValue || 0)} ${entity.unit || 'W'}` : \r\n                      ''}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              `)}\r\n            </div>\r\n          </div>\r\n        ` : html`\r\n          <div class=\"empty-message\">\r\n            No power entities found. Make sure you have entities with unit set to W or kW.\r\n          </div>\r\n        `}\r\n\r\n        ${this.config?.show_energy_section && this.energyEntities.length > 0 ? html`\r\n          <div class=\"section-separator\"></div>\r\n\r\n          <div class=\"control-buttons\">\r\n            <button class=\"control-button\" @click=\"${this._resetToEnergyDefaultEntities}\">\r\n              <ha-icon icon=\"mdi:refresh\"></ha-icon>\r\n              <span>Reset</span>\r\n            </button>\r\n            <button class=\"control-button\" @click=\"${this._clearAllEnergyEntities}\">\r\n              <ha-icon icon=\"mdi:close-circle-outline\"></ha-icon>\r\n              <span>Clear</span>\r\n            </button>\r\n            <button class=\"control-button\" @click=\"${this._selectAllEnergyEntities}\">\r\n              <ha-icon icon=\"mdi:check-circle-outline\"></ha-icon>\r\n              <span>Select All</span>\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"section-title\">Energy Entities</div>\r\n          \r\n          <div style=\"width: 100%; box-sizing: border-box;\">\r\n            <div class=\"entities-container\" style=\"${containerStyle}\">\r\n              ${this.energyEntities.map(entity => html`\r\n                <div \r\n                  class=\"entity-item ${entity.isOn ? 'on' : 'off'}\"\r\n                  data-entity=\"${entity.entityId}\"\r\n                  @click=\"${this._toggleEnergyEntity}\"\r\n                  style=\"gap: 4px;\"\r\n                >\r\n                  <div class=\"entity-left\">\r\n                    <div class=\"entity-name\" title=\"${entity.name}\">${entity.name}</div>\r\n                  </div>\r\n                  <div class=\"entity-state\">\r\n                    <div class=\"status-indicator\">${entity.isToggleable ? (entity.isOn ? 'ON' : 'OFF') : ''}</div>\r\n                    <div class=\"power-value\">${this.config?.show_state ? \r\n                      `${entity.state} ${entity.unit}` : \r\n                      ''}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              `)}\r\n            </div>\r\n          </div>\r\n        ` : this.config?.show_energy_section ? html`\r\n          <div class=\"section-separator\"></div>\r\n          <div class=\"section-title\">Energy Entities</div>\r\n          <div class=\"empty-message\">\r\n            No energy entities found. Make sure you have entities with unit set to Wh or kWh.\r\n          </div>\r\n        ` : ''}\r\n      </ha-card>\r\n    `;\r\n  }\r\n}\r\n\r\n// Register the card with the custom elements registry\r\ncustomElements.define('energy-dashboard-entity-card', EnergyDashboardEntityCard);","import { LitElement, html, css } from 'lit';\r\nimport { EnergyDashboardConfig } from './types';\r\n\r\n// Extend HTMLInputElement to include the configValue property\r\ninterface CustomHTMLInputElement extends HTMLInputElement {\r\n  configValue?: string;\r\n}\r\n\r\nexport class EnergyDashboardEntityCardEditor extends LitElement {\r\n  // Explicit property declarations for TypeScript\r\n  hass: any;\r\n  config: EnergyDashboardConfig;\r\n\r\n  static get properties() {\r\n    return {\r\n      hass: { type: Object },\r\n      config: { type: Object }\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.hass = undefined;\r\n    this.config = undefined as unknown as EnergyDashboardConfig;\r\n  }\r\n\r\n  static get styles() {\r\n    return css`\r\n      .form {\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n      .row {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        padding: 8px 16px;\r\n      }\r\n      .title {\r\n        padding-left: 16px;\r\n        margin-top: 8px;\r\n        font-weight: 500;\r\n      }\r\n      .value {\r\n        width: 100%;\r\n      }\r\n      ha-switch {\r\n        margin-right: 16px;\r\n      }\r\n    `;\r\n  }\r\n\r\n  setConfig(config: EnergyDashboardConfig) {\r\n    this.config = {\r\n      // First spread the provided config\r\n      ...config,\r\n      // Then apply defaults for any missing properties\r\n      show_header: config.show_header !== undefined ? config.show_header : true,\r\n      show_state: config.show_state !== undefined ? config.show_state : true,\r\n      show_toggle: config.show_toggle !== undefined ? config.show_toggle : true,\r\n      auto_select_count: config.auto_select_count !== undefined ? config.auto_select_count : 6,\r\n      max_height: config.max_height !== undefined ? config.max_height : 400, // Default to ~15 entities\r\n      show_energy_section: config.show_energy_section !== undefined ? config.show_energy_section : true,\r\n      energy_auto_select_count: config.energy_auto_select_count !== undefined ? config.energy_auto_select_count : 6,\r\n      title: config.title !== undefined ? config.title : 'Energy Dashboard',\r\n    };\r\n  }\r\n\r\n  valueChanged(ev: Event) {\r\n    if (!this.config) return;\r\n    const target = ev.target as CustomHTMLInputElement;\r\n    const configValue = target.configValue;\r\n    if (!configValue) return;\r\n\r\n    let newValue;\r\n    if (typeof target.checked === 'boolean') {\r\n      newValue = target.checked;\r\n    } else if (target.value !== undefined) {\r\n      if (target.type === 'number') {\r\n        newValue = Number(target.value);\r\n      } else {\r\n        newValue = target.value;\r\n      }\r\n    }\r\n\r\n    if (this.config[configValue] === newValue) return;\r\n\r\n    const newConfig = {\r\n      ...this.config,\r\n      [configValue]: newValue\r\n    };\r\n\r\n    this.dispatchEvent(new CustomEvent('config-changed', {\r\n      detail: { config: newConfig },\r\n      bubbles: true,\r\n      composed: true\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    if (!this.config) return html``;\r\n\r\n    return html`\r\n      <div class=\"form\">\r\n        <div class=\"title\">Card Settings</div>\r\n\r\n        <div class=\"row\">\r\n          <ha-textfield\r\n            label=\"Title\"\r\n            .value=\"${this.config.title || ''}\"\r\n            .configValue=\"title\"\r\n            @change=\"${this.valueChanged}\"\r\n            class=\"value\"\r\n          ></ha-textfield>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <ha-switch\r\n            .checked=${this.config.show_header !== false}\r\n            .configValue=\"show_header\"\r\n            @change=\"${this.valueChanged}\"\r\n          ></ha-switch>\r\n          <div>Show Header</div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <ha-switch\r\n            .checked=${this.config.show_state !== false}\r\n            .configValue=\"show_state\"\r\n            @change=\"${this.valueChanged}\"\r\n          ></ha-switch>\r\n          <div>Show State</div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <ha-switch\r\n            .checked=${this.config.show_toggle !== false}\r\n            .configValue=\"show_toggle\"\r\n            @change=\"${this.valueChanged}\"\r\n          ></ha-switch>\r\n          <div>Allow Toggling</div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <ha-textfield\r\n            label=\"Auto-select Count\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"50\"\r\n            .value=\"${String(this.config.auto_select_count || 6)}\"\r\n            .configValue=\"auto_select_count\"\r\n            @change=\"${this.valueChanged}\"\r\n            class=\"value\"\r\n          ></ha-textfield>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <ha-textfield\r\n            label=\"Energy Auto-select Count\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"50\"\r\n            .value=\"${String(this.config.energy_auto_select_count || 6)}\"\r\n            .configValue=\"energy_auto_select_count\"\r\n            @change=\"${this.valueChanged}\"\r\n            class=\"value\"\r\n          ></ha-textfield>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <ha-switch\r\n            .checked=${this.config.show_energy_section !== false}\r\n            .configValue=\"show_energy_section\"\r\n            @change=\"${this.valueChanged}\"\r\n          ></ha-switch>\r\n          <div>Show Energy Section</div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <ha-textfield\r\n            label=\"Max Height (0 for no limit)\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"1000\"\r\n            .value=\"${String(this.config.max_height || 0)}\"\r\n            .configValue=\"max_height\"\r\n            @change=\"${this.valueChanged}\"\r\n            class=\"value\"\r\n            helper-persistent\r\n            helper-text=\"Set maximum height in pixels (0 = no limit)\"\r\n          ></ha-textfield>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('energy-dashboard-entity-card-editor', EnergyDashboardEntityCardEditor);"],"names":[],"mappings":"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"}