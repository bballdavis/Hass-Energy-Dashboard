{"version":3,"file":"energy-dashboard.js","sources":["src/entity-utils.ts","src/styles.ts","src/energy-dashboard-entity-card.ts","src/energy-dashboard-entity-card-editor.ts","src/energy-dashboard-chart-config.ts","src/energy-dashboard-chart-card.ts","src/energy-dashboard-chart-card-editor.ts","src/card-registration.ts"],"sourcesContent":["import { EntityInfo } from './types';\n\nexport function getPowerEntities(hass: any): EntityInfo[] {\n  return Object.keys(hass.states)\n    .filter(entityId => {\n      const stateObj = hass.states[entityId];\n      return stateObj && stateObj.attributes &&\n        (stateObj.attributes.unit_of_measurement === 'W' ||\n         stateObj.attributes.unit_of_measurement === 'kW');\n    })\n    .map(entityId => {\n      const stateObj = hass.states[entityId];\n      const domain = entityId.split('.')[0];\n      const isToggleable = ['switch', 'light', 'input_boolean', 'fan', 'automation'].includes(domain);\n\n      let powerValue = 0;\n      try {\n        if (stateObj.attributes.unit_of_measurement === 'kW') {\n          powerValue = parseFloat(stateObj.state) * 1000;\n        } else {\n          powerValue = parseFloat(stateObj.state) || 0;\n        }\n      } catch {\n        powerValue = 0;\n      }\n\n      return {\n        entityId,\n        name: stateObj.attributes.friendly_name || entityId,\n        state: stateObj.state,\n        unit: stateObj.attributes.unit_of_measurement,\n        powerValue,\n        isToggleable\n      };\n    })\n    .sort((a, b) => b.powerValue! - a.powerValue!);\n}\n\nexport function getEnergyEntities(hass: any): EntityInfo[] {\n  return Object.keys(hass.states)\n    .filter(entityId => {\n      const stateObj = hass.states[entityId];\n      return stateObj && stateObj.attributes &&\n        (stateObj.attributes.unit_of_measurement === 'Wh' ||\n         stateObj.attributes.unit_of_measurement === 'kWh');\n    })\n    .map(entityId => {\n      const stateObj = hass.states[entityId];\n      const domain = entityId.split('.')[0];\n      const isToggleable = ['switch', 'light', 'input_boolean', 'fan', 'automation'].includes(domain);\n\n      let energyValue = 0;\n      try {\n        if (stateObj.attributes.unit_of_measurement === 'Wh') {\n          energyValue = parseFloat(stateObj.state) / 1000;\n        } else {\n          energyValue = parseFloat(stateObj.state) || 0;\n        }\n      } catch {\n        energyValue = 0;\n      }\n\n      return {\n        entityId,\n        name: stateObj.attributes.friendly_name || entityId,\n        state: stateObj.state,\n        unit: stateObj.attributes.unit_of_measurement,\n        energyValue,\n        isToggleable\n      };\n    })\n    .sort((a, b) => b.energyValue! - a.energyValue!);\n}\n\nexport function loadToggleStates(key: string): Record<string, boolean> | null {\n  try {\n    const stored = localStorage.getItem(key);\n    return stored ? JSON.parse(stored) : null;\n  } catch {\n    return null;\n  }\n}\n\nexport function saveToggleStates(states: Record<string, boolean>, key: string): void {\n  try {\n    localStorage.setItem(key, JSON.stringify(states));\n  } catch {\n    try {\n      const reducedStates: Record<string, boolean> = {};\n      Object.keys(states).forEach(k => {\n        if (states[k]) reducedStates[k] = true;\n      });\n      localStorage.setItem(key, JSON.stringify(reducedStates));\n    } catch {}\n  }\n}","export function createStyles(cssText: string): HTMLStyleElement {\n  const style = document.createElement('style');\n  style.textContent = cssText;\n  return style;\n}\n\nexport const cardStyles = `\n  :host {\n    --card-padding: 16px;\n    --entity-height: 12px;\n    --entity-width: 240px;\n    --button-height: 32px;\n    --entity-font-size: 0.95em;\n    --section-title-font-size: 0.9975em;\n  }\n  .card-header {\n    padding: var(--card-padding);\n    font-family: var(--paper-font-headline_-_font-family);\n    -webkit-font-smoothing: var(--paper-font-headline_-_-webkit-font-smoothing);\n    font-size: var(--paper-font-headline_-_font-size);\n    font-weight: var(--paper-font-headline_-_font-weight);\n    letter-spacing: var(--paper-font-headline_-_letter-spacing);\n    line-height: var(--paper-font-headline_-_line-height);\n    color: var(--ha-card-header-color, --primary-text-color);\n  }\n  .control-buttons {\n    padding: 0 var(--card-padding) 8px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .control-button {\n    background-color: var(--secondary-background-color);\n    border: none;\n    border-radius: 8px;\n    padding: 6px 12px;\n    color: var(--primary-text-color);\n    font-size: 0.9em;\n    font-weight: 500;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: background-color 0.3s ease;\n    flex: 1;\n    margin: 0 4px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);\n    height: var(--button-height);\n    min-height: var(--button-height);\n    box-sizing: border-box;\n  }\n  .control-button:first-child {\n    margin-left: 0;\n  }\n  .control-button:last-child {\n    margin-right: 0;\n  }\n  .control-button:hover {\n    background-color: var(--primary-color);\n    color: var(--text-primary-color);\n  }\n  .control-button ha-icon {\n    margin-right: 4px;\n    --mdc-icon-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .section-title {\n    padding: 6px var(--card-padding);\n    font-size: var(--section-title-font-size);\n    font-weight: 500;\n    color: var(--primary-text-color);\n    display: flex;\n    align-items: center;\n  }\n  .entities-container {\n    padding: 0 var(--card-padding) var(--card-padding);\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    justify-content: flex-start;\n    overflow-y: auto;\n    scrollbar-width: thin;\n    scrollbar-color: var(--scrollbar-thumb-color) transparent;\n    width: calc(100% - (var(--card-padding) * 2));\n    box-sizing: border-box;\n    min-width: 100%;\n  }\n  .entities-container::-webkit-scrollbar {\n    width: 6px;\n  }\n  .entities-container::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  .entities-container::-webkit-scrollbar-thumb {\n    background-color: var(--scrollbar-thumb-color, var(--divider-color, #e0e0e0));\n    border-radius: 3px;\n  }\n  .entity-item {\n    background-color: var(--ha-card-background, var(--card-background-color, white));\n    border-radius: 12px;\n    padding: 8px 16px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    cursor: pointer;\n    transition: all 0.3s ease;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    height: auto;\n    min-height: var(--entity-height);\n    width: 100%;\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-shrink: 0;\n    min-width: 100%;\n    max-width: 100%;\n    margin-bottom: 2px;\n  }\n  .entity-item:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    transform: translateY(-1px);\n  }\n  .entity-item.on {\n    background-color: var(--primary-color);\n    color: var(--text-primary-color);\n  }\n  .entity-left {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 3;\n    min-width: 0;\n    margin-top: -1px;\n    margin-bottom: -1px;\n  }\n  .entity-name {\n    font-weight: bold;\n    font-size: 0.95em;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 100%;\n    flex: 1;\n    margin-right: 16px;\n  }\n  .entity-state {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    min-width: 85px;\n    max-width: 85px;\n    white-space: nowrap;\n    flex: 0 0 auto;\n    font-size: 0.95em;\n  }\n  .power-value {\n    font-weight: 500;\n  }\n  .empty-message {\n    padding: var(--card-padding);\n    text-align: center;\n    color: var(--secondary-text-color);\n  }\n  .section-separator {\n    height: 1px;\n    background-color: var(--divider-color, #e0e0e0);\n    margin: 12px var(--card-padding) 8px;\n    opacity: 0.6;\n  }\n  \n  /* Loading and error states */\n  .loading-container {\n    padding: 16px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: var(--loading-height, 300px);\n    border-radius: 8px;\n    animation: fadeIn 0.3s ease-in-out;\n  }\n  \n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n  \n  @keyframes pulse {\n    0% { opacity: 0.6; }\n    50% { opacity: 1; }\n    100% { opacity: 0.6; }\n  }\n  \n  .loading-container .loading-text {\n    margin-top: 16px;\n    color: var(--secondary-text-color);\n    animation: pulse 1.5s infinite;\n  }\n  \n  .error-container {\n    border: 1px dashed var(--error-color, red);\n    border-radius: 8px;\n    padding: 16px;\n    margin: 8px 16px;\n    transition: all 0.3s ease;\n  }\n  \n  .error-container:hover {\n    background-color: rgba(var(--error-color-rgb, 244, 67, 54), 0.05);\n  }\n  \n  .error-container ul {\n    margin-top: 8px;\n    margin-bottom: 4px;\n  }\n  \n  .chart-container {\n    transition: opacity 0.3s ease-in-out;\n  }\n`;\n\nexport const editorStyles = `\n  .form {\n    display: flex;\n    flex-direction: column;\n  }\n  .row {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 8px 16px;\n  }\n  .title {\n    padding-left: 16px;\n    margin-top: 8px;\n    font-weight: 500;\n  }\n  .value {\n    width: 100%;\n  }\n  ha-switch {\n    margin-right: 16px;\n  }\n`;","import { EntityInfo, EnergyDashboardConfig } from './types';\nimport { getPowerEntities, getEnergyEntities, loadToggleStates, saveToggleStates } from './entity-utils';\nimport { createStyles, cardStyles } from './styles';\n\nexport class EnergyDashboardEntityCard extends HTMLElement {\n  // Properties\n  private _hass: any;\n  config?: EnergyDashboardConfig;\n  powerEntities: EntityInfo[] = [];\n  energyEntities: EntityInfo[] = [];\n  entityToggleStates: Record<string, boolean> = {};\n  energyEntityToggleStates: Record<string, boolean> = {};\n  private _initialized: boolean = false;\n  private _energyInitialized: boolean = false;\n  private _root: ShadowRoot;\n  private _viewMode: 'power' | 'energy' = 'power'; // Default view mode\n\n  // Define card name and icon for card picker\n  static get cardType() {\n    return 'energy-dashboard-entity-card';\n  }\n\n  static get displayName() {\n    return 'Energy Dashboard Entity Card';\n  }\n\n  static get description() {\n    return 'Card that displays power and energy consumption entities';\n  }\n\n  static get icon() {\n    return 'mdi:lightning-bolt';\n  }\n\n  constructor() {\n    super();\n    this._root = this.attachShadow({ mode: 'open' });\n    this._root.appendChild(createStyles(cardStyles));\n    \n    // Initialize properties\n    this._hass = undefined;\n    this.powerEntities = [];\n    this.energyEntities = [];\n    this.entityToggleStates = {};\n    this.energyEntityToggleStates = {};\n    this._initialized = false;\n    this._energyInitialized = false;\n    this._viewMode = 'power';\n    \n    // Create the card element\n    const card = document.createElement('ha-card');\n    this._root.appendChild(card);\n  }\n\n  // Called when the element is added to the DOM\n  connectedCallback() {\n    // Load persistence setting from localStorage when element is connected to DOM\n    if (this.config) {\n      this.config.persist_selection = this._loadPersistenceState();\n    }\n    \n    // Load view mode from localStorage\n    this._viewMode = this._loadViewMode();\n    if (this.config) {\n      this.config.view_mode = this._viewMode;\n    }\n    \n    this._updateContent();\n  }\n\n  // Home Assistant specific method to set config\n  setConfig(config: EnergyDashboardConfig) {\n    if (!config) {\n      throw new Error(\"Invalid configuration\");\n    }\n    \n    // Load persistence setting from localStorage first\n    const persistenceFromStorage = this._loadPersistenceState();\n    \n    // Create a merged config object correctly by spreading config first\n    this.config = {\n      ...config,\n      // Then set defaults only for missing properties\n      title: config.title ?? 'Energy Dashboard',\n      show_header: config.show_header ?? true,\n      show_state: config.show_state ?? true,\n      show_toggle: config.show_toggle ?? true,\n      auto_select_count: config.auto_select_count ?? 6,\n      max_height: config.max_height ?? 400,\n      show_energy_section: config.show_energy_section ?? true,\n      energy_auto_select_count: config.energy_auto_select_count ?? 6,\n      // Use the stored value as priority for persistence setting\n      persist_selection: persistenceFromStorage,\n    };\n    \n    this._updateContent();\n  }\n\n  // Home Assistant specific methods\n  static getConfigElement() {\n    return document.createElement('energy-dashboard-entity-card-editor');\n  }\n\n  static getStubConfig() {\n    return {\n      title: 'Energy Dashboard',\n      show_header: true,\n      show_state: true,\n      show_toggle: true,\n      auto_select_count: 6,\n      max_height: 400,\n      show_energy_section: true,\n      energy_auto_select_count: 6,\n      persist_selection: true\n    };\n  }\n\n  getCardSize() {\n    let rows = 0;\n\n    if (this.powerEntities && this.powerEntities.length > 0) {\n      rows += this.powerEntities.length * 0.7;\n      rows += 2;\n    }\n\n    if (this.config?.show_energy_section && this.energyEntities && this.energyEntities.length > 0) {\n      rows += this.energyEntities.length * 0.7;\n      rows += 2;\n    }\n\n    return rows > 0 ? rows : 1;\n  }\n\n  // Called when Home Assistant updates\n  set hass(hass: any) {\n    const isFirstUpdate = !this._hass;\n    this._hass = hass;\n    \n    // Load the persistence setting from localStorage early to ensure it's always available\n    if (this.config && isFirstUpdate) {\n      this.config.persist_selection = this._loadPersistenceState();\n    }\n    \n    this._updateEntities();\n    this._updateContent();\n  }\n\n  get hass() {\n    return this._hass;\n  }\n\n  _updateEntities() {\n    if (!this._hass) return;\n\n    try {\n      this._updatePowerEntities();\n      if (this.config?.show_energy_section) {\n        this._updateEnergyEntities();\n      }\n    } catch (e) {\n      console.error(\"Error updating entities:\", e);\n    }\n  }\n\n  _updatePowerEntities() {\n    const newPowerEntities = getPowerEntities(this._hass);\n    if (!this._initialized || Object.keys(this.entityToggleStates).length === 0) {\n      this._initializePowerToggleStates(newPowerEntities);\n      this._initialized = true;\n    }\n    this.powerEntities = newPowerEntities.map(entity => ({\n      ...entity,\n      isOn: this.entityToggleStates[entity.entityId] || false\n    }));\n    this._savePowerToggleStates();\n  }\n\n  _updateEnergyEntities() {\n    const newEnergyEntities = getEnergyEntities(this._hass);\n    if (!this._energyInitialized || Object.keys(this.energyEntityToggleStates).length === 0) {\n      this._initializeEnergyToggleStates(newEnergyEntities);\n      this._energyInitialized = true;\n    }\n    this.energyEntities = newEnergyEntities.map(entity => ({\n      ...entity,\n      isOn: this.energyEntityToggleStates[entity.entityId] || false\n    }));\n    this._saveEnergyToggleStates();\n  }\n\n  _initializePowerToggleStates(entities: EntityInfo[]) {\n    // Only load saved states if persistence is enabled\n    const persistenceEnabled = this.config?.persist_selection ?? true;\n    const savedStates = persistenceEnabled ? loadToggleStates('energy-dashboard-power-toggle-states') : null;\n    \n    if (savedStates && Object.keys(savedStates).length > 0) {\n      this.entityToggleStates = savedStates;\n    } else {\n      // Create a new toggle states object\n      const toggleStates: Record<string, boolean> = {};\n      \n      // Get auto_select_count from config, or use default of 6\n      const count = this.config?.auto_select_count ?? 6;\n      \n      // Initialize all entities first to ensure they're tracked\n      entities.forEach(entity => {\n        // Set to false by default\n        toggleStates[entity.entityId] = false;\n      });\n      \n      // Then set the first `count` entities to true\n      entities.slice(0, count).forEach(entity => {\n        toggleStates[entity.entityId] = true;\n      });\n      \n      this.entityToggleStates = toggleStates;\n    }\n  }\n\n  _initializeEnergyToggleStates(entities: EntityInfo[]) {\n    // Only load saved states if persistence is enabled\n    const persistenceEnabled = this.config?.persist_selection ?? true;\n    const savedStates = persistenceEnabled ? loadToggleStates('energy-dashboard-energy-toggle-states') : null;\n    \n    if (savedStates && Object.keys(savedStates).length > 0) {\n      this.energyEntityToggleStates = savedStates;\n    } else {\n      // Create a new toggle states object\n      const toggleStates: Record<string, boolean> = {};\n      \n      // Get energy_auto_select_count from config, or use default of 6\n      const count = this.config?.energy_auto_select_count ?? 6;\n      \n      // Initialize all entities first to ensure they're tracked\n      entities.forEach(entity => {\n        // Set to false by default\n        toggleStates[entity.entityId] = false;\n      });\n      \n      // Then set the first `count` entities to true\n      entities.slice(0, count).forEach(entity => {\n        toggleStates[entity.entityId] = true;\n      });\n      \n      this.energyEntityToggleStates = toggleStates;\n    }\n  }\n\n  // Make entity selections accessible to other components even when persistence is off\n  _savePowerToggleStates() {\n    // Always save toggle states to localStorage for the chart card to access, \n    // but they will only be loaded on initialization if persistence is enabled\n    saveToggleStates(this.entityToggleStates, 'energy-dashboard-power-toggle-states');\n  }\n\n  // Make entity selections accessible to other components even when persistence is off\n  _saveEnergyToggleStates() {\n    // Always save toggle states to localStorage for the chart card to access,\n    // but they will only be loaded on initialization if persistence is enabled\n    saveToggleStates(this.energyEntityToggleStates, 'energy-dashboard-energy-toggle-states');\n  }\n\n  _resetToPowerDefaultEntities = () => {\n    // Get current entities\n    const entities = getPowerEntities(this._hass);\n    \n    // Create a new toggle state object\n    const toggleStates: Record<string, boolean> = {};\n    const count = this.config?.auto_select_count ?? 6;\n    \n    // Set first 'count' entities to true, all others to false\n    entities.forEach((entity, index) => {\n      toggleStates[entity.entityId] = index < count;\n    });\n    \n    // Update the toggle states\n    this.entityToggleStates = toggleStates;\n    this._savePowerToggleStates();\n    this._updatePowerEntities();\n    this._updateContent();\n  }\n\n  _clearAllPowerEntities = () => {\n    const entities = getPowerEntities(this._hass);\n    const newToggleStates: Record<string, boolean> = {};\n    \n    // Set all entity toggle states to false\n    entities.forEach(entity => {\n      newToggleStates[entity.entityId] = false;\n    });\n    \n    this.entityToggleStates = newToggleStates;\n    this._savePowerToggleStates();\n    this._updatePowerEntities();\n    this._updateContent();\n  }\n\n  _selectAllPowerEntities = () => {\n    const entities = getPowerEntities(this._hass);\n    const newToggleStates: Record<string, boolean> = {};\n    \n    // Set all entity toggle states to true\n    entities.forEach(entity => {\n      newToggleStates[entity.entityId] = true;\n    });\n    \n    this.entityToggleStates = newToggleStates;\n    this._savePowerToggleStates();\n    this._updatePowerEntities();\n    this._updateContent();\n  }\n\n  _togglePowerEntity = (e: Event) => {\n    const target = e.currentTarget as HTMLElement;\n    const entityId = target.dataset.entity;\n    if (entityId) {\n      this.entityToggleStates[entityId] = !this.entityToggleStates[entityId];\n      this._updatePowerEntities();\n      this._updateContent();\n    }\n  }\n\n  _resetToEnergyDefaultEntities = () => {\n    // Get current energy entities\n    const entities = getEnergyEntities(this._hass);\n    \n    // Create a new toggle state object\n    const toggleStates: Record<string, boolean> = {};\n    const count = this.config?.energy_auto_select_count ?? 6;\n    \n    // Set first 'count' entities to true, all others to false\n    entities.forEach((entity, index) => {\n      toggleStates[entity.entityId] = index < count;\n    });\n    \n    // Update the toggle states\n    this.energyEntityToggleStates = toggleStates;\n    this._saveEnergyToggleStates();\n    this._updateEnergyEntities();\n    this._updateContent();\n  }\n\n  _clearAllEnergyEntities = () => {\n    const entities = getEnergyEntities(this._hass);\n    const newToggleStates: Record<string, boolean> = {};\n    \n    // Set all entity toggle states to false\n    entities.forEach(entity => {\n      newToggleStates[entity.entityId] = false;\n    });\n    \n    this.energyEntityToggleStates = newToggleStates;\n    this._saveEnergyToggleStates();\n    this._updateEnergyEntities();\n    this._updateContent();\n  }\n\n  _selectAllEnergyEntities = () => {\n    const entities = getEnergyEntities(this._hass);\n    const newToggleStates: Record<string, boolean> = {};\n    \n    // Set all entity toggle states to true\n    entities.forEach(entity => {\n      newToggleStates[entity.entityId] = true;\n    });\n    \n    this.energyEntityToggleStates = newToggleStates;\n    this._saveEnergyToggleStates();\n    this._updateEnergyEntities();\n    this._updateContent();\n  }\n\n  _toggleEnergyEntity = (e: Event) => {\n    const target = e.currentTarget as HTMLElement;\n    const entityId = target.dataset.entity;\n    if (entityId) {\n      this.energyEntityToggleStates[entityId] = !this.energyEntityToggleStates[entityId];\n      this._updateEnergyEntities();\n      this._updateContent();\n    }\n  }\n\n  _togglePersistence = () => {\n    if (this.config) {\n      // Toggle the persistence setting\n      this.config.persist_selection = !this.config.persist_selection;\n      \n      // Always save the persistence toggle state, regardless of its value\n      this._savePersistenceState(this.config.persist_selection);\n      \n      // If persistence is turned off, clear localStorage and reset to defaults immediately\n      if (!this.config.persist_selection) {\n        localStorage.removeItem('energy-dashboard-power-toggle-states');\n        localStorage.removeItem('energy-dashboard-energy-toggle-states');\n        \n        // Reset initialized state to force reload of default entities\n        this._initialized = false;\n        this._energyInitialized = false;\n      } else {\n        // If persistence is turned on, save the current toggle states\n        this._savePowerToggleStates();\n        this._saveEnergyToggleStates();\n      }\n      \n      // Re-initialize and update the content with new settings\n      this._updateEntities();\n      this._updateContent();\n    }\n  }\n\n  // Manage the persistence toggle setting separately\n  _loadPersistenceState(): boolean {\n    try {\n      const stored = localStorage.getItem('energy-dashboard-persistence-toggle');\n      return stored === null ? true : stored === 'true';\n    } catch {\n      return true; // Default to true if we can't load from localStorage\n    }\n  }\n\n  _savePersistenceState(persist: boolean): void {\n    try {\n      localStorage.setItem('energy-dashboard-persistence-toggle', String(persist));\n    } catch (e) {\n      console.error(\"Failed to save persistence state:\", e);\n    }\n  }\n\n  // Save view mode to localStorage\n  _saveViewMode(mode: 'power' | 'energy'): void {\n    try {\n      localStorage.setItem('energy-dashboard-view-mode', mode);\n      // Also update config to keep it in sync\n      if (this.config) {\n        this.config.view_mode = mode;\n      }\n      this._viewMode = mode;\n    } catch (e) {\n      console.error(\"Failed to save view mode:\", e);\n    }\n  }\n\n  // Load view mode from localStorage\n  _loadViewMode(): 'power' | 'energy' {\n    try {\n      const stored = localStorage.getItem('energy-dashboard-view-mode');\n      return (stored === 'power' || stored === 'energy') ? stored : 'power';\n    } catch {\n      return 'power'; // Default to power view if we can't load from localStorage\n    }\n  }\n\n  // Toggle between power and energy view\n  _toggleViewMode = () => {\n    const newMode = this._viewMode === 'power' ? 'energy' : 'power';\n    this._viewMode = newMode;\n    this._saveViewMode(newMode);\n    \n    // Save the current view mode to be used by chart card\n    this._updateContent();\n    \n    // Dispatch a custom event that the chart card can listen for\n    this.dispatchEvent(new CustomEvent('view-mode-changed', {\n      detail: { mode: newMode },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  _renderPowerSection(): HTMLElement {\n    const section = document.createElement('div');\n\n    if (this.powerEntities.length > 0) {\n      // Control buttons\n      const controlButtons = document.createElement('div');\n      controlButtons.className = 'control-buttons';\n      \n      const resetButton = document.createElement('button');\n      resetButton.className = 'control-button';\n      resetButton.innerHTML = '<ha-icon icon=\"mdi:refresh\"></ha-icon><span>Reset</span>';\n      resetButton.addEventListener('click', this._resetToPowerDefaultEntities);\n      \n      const clearButton = document.createElement('button');\n      clearButton.className = 'control-button';\n      clearButton.innerHTML = '<ha-icon icon=\"mdi:close-circle-outline\"></ha-icon><span>Clear</span>';\n      clearButton.addEventListener('click', this._clearAllPowerEntities);\n      \n      const selectAllButton = document.createElement('button');\n      selectAllButton.className = 'control-button';\n      selectAllButton.innerHTML = '<ha-icon icon=\"mdi:check-circle-outline\"></ha-icon><span>Select All</span>';\n      selectAllButton.addEventListener('click', this._selectAllPowerEntities);\n      \n      controlButtons.appendChild(resetButton);\n      controlButtons.appendChild(clearButton);\n      controlButtons.appendChild(selectAllButton);\n      section.appendChild(controlButtons);\n      \n      // Add persistence toggle\n      const persistenceToggle = document.createElement('div');\n      persistenceToggle.className = 'persistence-toggle';\n      persistenceToggle.style.display = 'flex';\n      persistenceToggle.style.alignItems = 'center';\n      persistenceToggle.style.justifyContent = 'center';\n      persistenceToggle.style.marginTop = '8px';\n      persistenceToggle.style.marginBottom = '8px';\n      persistenceToggle.style.cursor = 'pointer';\n      persistenceToggle.addEventListener('click', this._togglePersistence);\n      \n      const toggleLabel = document.createElement('span');\n      toggleLabel.style.marginRight = '8px';\n      toggleLabel.textContent = 'Remember Selection: ';\n      \n      const toggleSwitch = document.createElement('span');\n      toggleSwitch.className = 'toggle-switch';\n      toggleSwitch.style.position = 'relative';\n      toggleSwitch.style.display = 'inline-block';\n      toggleSwitch.style.width = '36px';\n      toggleSwitch.style.height = '20px';\n      \n      const toggleSlider = document.createElement('span');\n      toggleSlider.className = 'toggle-slider';\n      toggleSlider.style.position = 'absolute';\n      toggleSlider.style.cursor = 'pointer';\n      toggleSlider.style.top = '0';\n      toggleSlider.style.left = '0';\n      toggleSlider.style.right = '0';\n      toggleSlider.style.bottom = '0';\n      toggleSlider.style.backgroundColor = this.config?.persist_selection ? 'var(--primary-color, #03a9f4)' : '#ccc';\n      toggleSlider.style.borderRadius = '34px';\n      toggleSlider.style.transition = '.4s';\n      \n      const toggleButton = document.createElement('span');\n      toggleButton.style.position = 'absolute';\n      toggleButton.style.content = '\"\"';\n      toggleButton.style.height = '16px';\n      toggleButton.style.width = '16px';\n      toggleButton.style.left = this.config?.persist_selection ? '16px' : '4px';\n      toggleButton.style.bottom = '2px';\n      toggleButton.style.backgroundColor = 'white';\n      toggleButton.style.borderRadius = '50%';\n      toggleButton.style.transition = '.4s';\n      \n      toggleSlider.appendChild(toggleButton);\n      toggleSwitch.appendChild(toggleSlider);\n      persistenceToggle.appendChild(toggleLabel);\n      persistenceToggle.appendChild(toggleSwitch);\n      \n      section.appendChild(persistenceToggle);\n      \n      // Section title\n      const sectionTitle = document.createElement('div');\n      sectionTitle.className = 'section-title';\n      sectionTitle.textContent = 'Power Entities';\n      section.appendChild(sectionTitle);\n      \n      // Container\n      const containerWrapper = document.createElement('div');\n      containerWrapper.style.width = '100%';\n      containerWrapper.style.boxSizing = 'border-box';\n      \n      const entitiesContainer = document.createElement('div');\n      entitiesContainer.className = 'entities-container';\n      \n      if (this.config?.max_height && this.config.max_height > 0) {\n        entitiesContainer.style.maxHeight = `${Math.min(this.config.max_height, 400)}px`;\n        entitiesContainer.style.overflowY = 'auto';\n      }\n      \n      // Add entities\n      this.powerEntities.forEach(entity => {\n        const entityItem = document.createElement('div');\n        entityItem.className = `entity-item ${entity.isOn ? 'on' : 'off'}`;\n        entityItem.dataset.entity = entity.entityId;\n        entityItem.style.gap = '4px';\n        entityItem.addEventListener('click', this._togglePowerEntity);\n        \n        const entityLeft = document.createElement('div');\n        entityLeft.className = 'entity-left';\n        \n        const entityName = document.createElement('div');\n        entityName.className = 'entity-name';\n        entityName.title = entity.name;\n        entityName.textContent = entity.name;\n        \n        entityLeft.appendChild(entityName);\n        entityItem.appendChild(entityLeft);\n        \n        const entityState = document.createElement('div');\n        entityState.className = 'entity-state';\n        \n        const statusIndicator = document.createElement('div');\n        statusIndicator.className = 'status-indicator';\n        statusIndicator.textContent = entity.isToggleable ? (entity.isOn ? 'ON' : 'OFF') : '';\n        \n        const powerValue = document.createElement('div');\n        powerValue.className = 'power-value';\n        \n        if (this.config?.show_state) {\n          powerValue.textContent = `${entity.unit === 'kW' ? entity.state : Math.round(entity.powerValue || 0)} ${entity.unit || 'W'}`;\n        }\n        \n        entityState.appendChild(statusIndicator);\n        entityState.appendChild(powerValue);\n        entityItem.appendChild(entityState);\n        \n        entitiesContainer.appendChild(entityItem);\n      });\n      \n      containerWrapper.appendChild(entitiesContainer);\n      section.appendChild(containerWrapper);\n    } else {\n      // Empty message\n      const emptyMessage = document.createElement('div');\n      emptyMessage.className = 'empty-message';\n      emptyMessage.textContent = 'No power entities found. Make sure you have entities with unit set to W or kW.';\n      section.appendChild(emptyMessage);\n    }\n    \n    return section;\n  }\n\n  _renderEnergySection(): HTMLElement {\n    const section = document.createElement('div');\n\n    // Only render if energy section is enabled\n    if (!this.config?.show_energy_section) {\n      return section;\n    }\n    \n    const separator = document.createElement('div');\n    separator.className = 'section-separator';\n    section.appendChild(separator);\n\n    if (this.energyEntities.length > 0) {\n      // Control buttons for energy section\n      const controlButtons = document.createElement('div');\n      controlButtons.className = 'control-buttons';\n      \n      const resetButton = document.createElement('button');\n      resetButton.className = 'control-button';\n      resetButton.innerHTML = '<ha-icon icon=\"mdi:refresh\"></ha-icon><span>Reset</span>';\n      resetButton.addEventListener('click', this._resetToEnergyDefaultEntities);\n      \n      const clearButton = document.createElement('button');\n      clearButton.className = 'control-button';\n      clearButton.innerHTML = '<ha-icon icon=\"mdi:close-circle-outline\"></ha-icon><span>Clear</span>';\n      clearButton.addEventListener('click', this._clearAllEnergyEntities);\n      \n      const selectAllButton = document.createElement('button');\n      selectAllButton.className = 'control-button';\n      selectAllButton.innerHTML = '<ha-icon icon=\"mdi:check-circle-outline\"></ha-icon><span>Select All</span>';\n      selectAllButton.addEventListener('click', this._selectAllEnergyEntities);\n      \n      controlButtons.appendChild(resetButton);\n      controlButtons.appendChild(clearButton);\n      controlButtons.appendChild(selectAllButton);\n      section.appendChild(controlButtons);\n      \n      // Add persistence toggle\n      const persistenceToggle = document.createElement('div');\n      persistenceToggle.className = 'persistence-toggle';\n      persistenceToggle.style.display = 'flex';\n      persistenceToggle.style.alignItems = 'center';\n      persistenceToggle.style.justifyContent = 'center';\n      persistenceToggle.style.marginTop = '8px';\n      persistenceToggle.style.marginBottom = '8px';\n      persistenceToggle.style.cursor = 'pointer';\n      persistenceToggle.addEventListener('click', this._togglePersistence);\n      \n      const toggleLabel = document.createElement('span');\n      toggleLabel.style.marginRight = '8px';\n      toggleLabel.textContent = 'Remember Selection: ';\n      \n      const toggleSwitch = document.createElement('span');\n      toggleSwitch.className = 'toggle-switch';\n      toggleSwitch.style.position = 'relative';\n      toggleSwitch.style.display = 'inline-block';\n      toggleSwitch.style.width = '36px';\n      toggleSwitch.style.height = '20px';\n      \n      const toggleSlider = document.createElement('span');\n      toggleSlider.className = 'toggle-slider';\n      toggleSlider.style.position = 'absolute';\n      toggleSlider.style.cursor = 'pointer';\n      toggleSlider.style.top = '0';\n      toggleSlider.style.left = '0';\n      toggleSlider.style.right = '0';\n      toggleSlider.style.bottom = '0';\n      toggleSlider.style.backgroundColor = this.config?.persist_selection ? 'var(--primary-color, #03a9f4)' : '#ccc';\n      toggleSlider.style.borderRadius = '34px';\n      toggleSlider.style.transition = '.4s';\n      \n      const toggleButton = document.createElement('span');\n      toggleButton.style.position = 'absolute';\n      toggleButton.style.content = '\"\"';\n      toggleButton.style.height = '16px';\n      toggleButton.style.width = '16px';\n      toggleButton.style.left = this.config?.persist_selection ? '16px' : '4px';\n      toggleButton.style.bottom = '2px';\n      toggleButton.style.backgroundColor = 'white';\n      toggleButton.style.borderRadius = '50%';\n      toggleButton.style.transition = '.4s';\n      \n      toggleSlider.appendChild(toggleButton);\n      toggleSwitch.appendChild(toggleSlider);\n      persistenceToggle.appendChild(toggleLabel);\n      persistenceToggle.appendChild(toggleSwitch);\n      \n      section.appendChild(persistenceToggle);\n      \n      // Section title\n      const sectionTitle = document.createElement('div');\n      sectionTitle.className = 'section-title';\n      sectionTitle.textContent = 'Energy Entities';\n      section.appendChild(sectionTitle);\n      \n      // Container\n      const containerWrapper = document.createElement('div');\n      containerWrapper.style.width = '100%';\n      containerWrapper.style.boxSizing = 'border-box';\n      \n      const entitiesContainer = document.createElement('div');\n      entitiesContainer.className = 'entities-container';\n      \n      if (this.config?.max_height && this.config.max_height > 0) {\n        entitiesContainer.style.maxHeight = `${Math.min(this.config.max_height, 400)}px`;\n        entitiesContainer.style.overflowY = 'auto';\n      }\n      \n      // Add entities\n      this.energyEntities.forEach(entity => {\n        const entityItem = document.createElement('div');\n        entityItem.className = `entity-item ${entity.isOn ? 'on' : 'off'}`;\n        entityItem.dataset.entity = entity.entityId;\n        entityItem.style.gap = '4px';\n        entityItem.addEventListener('click', this._toggleEnergyEntity);\n        \n        const entityLeft = document.createElement('div');\n        entityLeft.className = 'entity-left';\n        \n        const entityName = document.createElement('div');\n        entityName.className = 'entity-name';\n        entityName.title = entity.name;\n        entityName.textContent = entity.name;\n        \n        entityLeft.appendChild(entityName);\n        entityItem.appendChild(entityLeft);\n        \n        const entityState = document.createElement('div');\n        entityState.className = 'entity-state';\n        \n        const statusIndicator = document.createElement('div');\n        statusIndicator.className = 'status-indicator';\n        statusIndicator.textContent = entity.isToggleable ? (entity.isOn ? 'ON' : 'OFF') : '';\n        \n        const powerValue = document.createElement('div');\n        powerValue.className = 'power-value';\n        \n        if (this.config?.show_state) {\n          powerValue.textContent = `${entity.state} ${entity.unit}`;\n        }\n        \n        entityState.appendChild(statusIndicator);\n        entityState.appendChild(powerValue);\n        entityItem.appendChild(entityState);\n        \n        entitiesContainer.appendChild(entityItem);\n      });\n      \n      containerWrapper.appendChild(entitiesContainer);\n      section.appendChild(containerWrapper);\n    } else {\n      // Section title\n      const sectionTitle = document.createElement('div');\n      sectionTitle.className = 'section-title';\n      sectionTitle.textContent = 'Energy Entities';\n      section.appendChild(sectionTitle);\n      \n      // Empty message\n      const emptyMessage = document.createElement('div');\n      emptyMessage.className = 'empty-message';\n      emptyMessage.textContent = 'No energy entities found. Make sure you have entities with unit set to Wh or kWh.';\n      section.appendChild(emptyMessage);\n    }\n    \n    return section;\n  }\n\n  _updateContent() {\n    if (!this.config) {\n      const card = this._root.querySelector('ha-card');\n      if (card) {\n        card.innerHTML = '<div class=\"empty-message\">Card not configured</div>';\n      }\n      return;\n    }\n\n    // Always ensure persistence setting is loaded from localStorage\n    this.config.persist_selection = this._loadPersistenceState();\n\n    // Get the ha-card element\n    const card = this._root.querySelector('ha-card');\n    if (!card) return;\n\n    // Clear previous content\n    card.innerHTML = '';\n\n    // Header\n    if (this.config.show_header) {\n      const header = document.createElement('div');\n      header.className = 'card-header';\n      header.textContent = this.config.title;\n      card.appendChild(header);\n    }\n    \n    // Add mode toggle at the top (only if energy section is enabled)\n    if (this.config.show_energy_section) {\n      const modeToggleContainer = document.createElement('div');\n      modeToggleContainer.className = 'mode-toggle-container';\n      modeToggleContainer.style.display = 'flex';\n      modeToggleContainer.style.justifyContent = 'center';\n      modeToggleContainer.style.alignItems = 'center';\n      modeToggleContainer.style.marginTop = '8px';\n      modeToggleContainer.style.marginBottom = '8px';\n      modeToggleContainer.style.padding = '4px';\n      \n      const toggleWrapper = document.createElement('div');\n      toggleWrapper.className = 'toggle-wrapper';\n      toggleWrapper.style.display = 'flex';\n      toggleWrapper.style.position = 'relative';\n      toggleWrapper.style.border = '1px solid var(--divider-color)';\n      toggleWrapper.style.borderRadius = '25px';\n      toggleWrapper.style.height = '30px';\n      toggleWrapper.style.width = '200px';\n      toggleWrapper.style.backgroundColor = 'var(--card-background-color)';\n      toggleWrapper.style.overflow = 'hidden';\n      \n      // Active background that slides based on selected option\n      const activeBackground = document.createElement('div');\n      activeBackground.className = 'active-background';\n      activeBackground.style.position = 'absolute';\n      activeBackground.style.top = '0';\n      activeBackground.style.bottom = '0';\n      activeBackground.style.left = this._viewMode === 'power' ? '0' : '50%';\n      activeBackground.style.width = '50%';\n      activeBackground.style.backgroundColor = 'var(--primary-color)';\n      activeBackground.style.borderRadius = '25px';\n      activeBackground.style.transition = 'left 0.3s ease-in-out';\n      activeBackground.style.opacity = '0.2';\n      \n      // Power option\n      const powerOption = document.createElement('div');\n      powerOption.className = 'toggle-option';\n      powerOption.textContent = 'Power';\n      powerOption.style.flex = '1';\n      powerOption.style.textAlign = 'center';\n      powerOption.style.lineHeight = '30px';\n      powerOption.style.cursor = 'pointer';\n      powerOption.style.zIndex = '1';\n      powerOption.style.fontWeight = this._viewMode === 'power' ? 'bold' : 'normal';\n      powerOption.style.color = this._viewMode === 'power' ? 'var(--primary-text-color)' : 'var(--secondary-text-color)';\n      powerOption.addEventListener('click', () => {\n        if (this._viewMode !== 'power') {\n          this._toggleViewMode();\n        }\n      });\n      \n      // Energy option\n      const energyOption = document.createElement('div');\n      energyOption.className = 'toggle-option';\n      energyOption.textContent = 'Energy';\n      energyOption.style.flex = '1';\n      energyOption.style.textAlign = 'center';\n      energyOption.style.lineHeight = '30px';\n      energyOption.style.cursor = 'pointer';\n      energyOption.style.zIndex = '1';\n      energyOption.style.fontWeight = this._viewMode === 'energy' ? 'bold' : 'normal';\n      energyOption.style.color = this._viewMode === 'energy' ? 'var(--primary-text-color)' : 'var(--secondary-text-color)';\n      energyOption.addEventListener('click', () => {\n        if (this._viewMode !== 'energy') {\n          this._toggleViewMode();\n        }\n      });\n      \n      toggleWrapper.appendChild(activeBackground);\n      toggleWrapper.appendChild(powerOption);\n      toggleWrapper.appendChild(energyOption);\n      modeToggleContainer.appendChild(toggleWrapper);\n      card.appendChild(modeToggleContainer);\n    }\n\n    // Show either power section or energy section based on the current view mode\n    if (this._viewMode === 'power' || !this.config.show_energy_section) {\n      // Power section\n      const powerSection = this._renderPowerSection();\n      card.appendChild(powerSection);\n    }\n\n    // Only show energy section if it's enabled and selected in view mode\n    if (this._viewMode === 'energy' && this.config.show_energy_section) {\n      // Energy section (without separator when it's the only section shown)\n      const energySection = this._renderEnergySection();\n      \n      // If we're in energy view mode, remove the separator as it's not needed\n      const separator = energySection.querySelector('.section-separator');\n      if (separator) {\n        separator.remove();\n      }\n      \n      card.appendChild(energySection);\n    }\n  }\n}\n\n// Register the card with the custom elements registry\ncustomElements.define('energy-dashboard-entity-card', EnergyDashboardEntityCard);","import { EnergyDashboardConfig } from './types';\nimport { createStyles, editorStyles } from './styles';\n\n// Extend HTMLInputElement to include the configValue property\ninterface CustomHTMLInputElement extends HTMLInputElement {\n  configValue?: string;\n}\n\n// Define a type for HA elements used in the editor\ninterface HaFormElement extends HTMLElement {\n  label?: string;\n  value?: string | number | boolean;\n  type?: string;\n  min?: string;\n  max?: string;\n  configValue?: string;\n  checked?: boolean;\n  helperText?: string;\n  helperPersistent?: boolean;\n  addEventListener(event: string, handler: (event: Event) => void): void;\n}\n\nexport class EnergyDashboardEntityCardEditor extends HTMLElement {\n  // Properties\n  hass: any;\n  config: EnergyDashboardConfig;\n  private _root: ShadowRoot;\n\n  constructor() {\n    super();\n    this._root = this.attachShadow({ mode: 'open' });\n    this._root.appendChild(createStyles(editorStyles));\n    \n    // Initialize properties\n    this.hass = undefined;\n    this.config = undefined as unknown as EnergyDashboardConfig;\n\n    // Create the form container\n    const form = document.createElement('div');\n    form.className = 'form';\n    this._root.appendChild(form);\n  }\n\n  // Called when the element is added to the DOM\n  connectedCallback() {\n    this._updateForm();\n  }\n\n  setConfig(config: EnergyDashboardConfig) {\n    this.config = {\n      // First spread the provided config\n      ...config,\n      // Then apply defaults for any missing properties\n      show_header: config.show_header !== undefined ? config.show_header : true,\n      show_state: config.show_state !== undefined ? config.show_state : true,\n      show_toggle: config.show_toggle !== undefined ? config.show_toggle : true,\n      auto_select_count: config.auto_select_count !== undefined ? config.auto_select_count : 6,\n      max_height: config.max_height !== undefined ? config.max_height : 400, // Default to ~15 entities\n      show_energy_section: config.show_energy_section !== undefined ? config.show_energy_section : true,\n      energy_auto_select_count: config.energy_auto_select_count !== undefined ? config.energy_auto_select_count : 6,\n      persist_selection: config.persist_selection !== undefined ? config.persist_selection : true,\n      title: config.title !== undefined ? config.title : 'Energy Dashboard',\n    };\n    this._updateForm();\n  }\n\n  valueChanged = (ev: Event) => {\n    if (!this.config) return;\n    \n    const target = ev.target as CustomHTMLInputElement;\n    const configValue = target.configValue;\n    if (!configValue) return;\n\n    let newValue;\n    if (typeof target.checked === 'boolean') {\n      newValue = target.checked;\n    } else if (target.value !== undefined) {\n      if (target.type === 'number') {\n        newValue = Number(target.value);\n      } else {\n        newValue = target.value;\n      }\n    }\n\n    if (this.config[configValue] === newValue) return;\n\n    const newConfig = {\n      ...this.config,\n      [configValue]: newValue\n    };\n\n    this.dispatchEvent(new CustomEvent('config-changed', {\n      detail: { config: newConfig },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  private _updateForm() {\n    if (!this.config) return;\n\n    // Get or create the form element\n    let form = this._root.querySelector('.form');\n    if (!form) {\n      form = document.createElement('div');\n      form.className = 'form';\n      this._root.appendChild(form);\n    }\n    form.innerHTML = '';\n\n    // Create title\n    const title = document.createElement('div');\n    title.className = 'title';\n    title.textContent = 'Card Settings';\n    form.appendChild(title);\n\n    // Title field\n    const titleRow = this._createRow();\n    const titleField = document.createElement('ha-textfield') as HaFormElement;\n    titleField.className = 'value';\n    titleField.label = 'Title';\n    titleField.value = this.config.title || '';\n    titleField.configValue = 'title';\n    titleField.addEventListener('change', this.valueChanged);\n    titleRow.appendChild(titleField);\n    form.appendChild(titleRow);\n\n    // Show Header toggle\n    const headerRow = this._createRow();\n    const headerSwitch = document.createElement('ha-switch') as HaFormElement;\n    headerSwitch.checked = this.config.show_header !== false;\n    headerSwitch.configValue = 'show_header';\n    headerSwitch.addEventListener('change', this.valueChanged);\n    const headerLabel = document.createElement('div');\n    headerLabel.textContent = 'Show Header';\n    headerRow.appendChild(headerSwitch);\n    headerRow.appendChild(headerLabel);\n    form.appendChild(headerRow);\n\n    // Show State toggle\n    const stateRow = this._createRow();\n    const stateSwitch = document.createElement('ha-switch') as HaFormElement;\n    stateSwitch.checked = this.config.show_state !== false;\n    stateSwitch.configValue = 'show_state';\n    stateSwitch.addEventListener('change', this.valueChanged);\n    const stateLabel = document.createElement('div');\n    stateLabel.textContent = 'Show State';\n    stateRow.appendChild(stateSwitch);\n    stateRow.appendChild(stateLabel);\n    form.appendChild(stateRow);\n\n    // Allow Toggling toggle\n    const toggleRow = this._createRow();\n    const toggleSwitch = document.createElement('ha-switch') as HaFormElement;\n    toggleSwitch.checked = this.config.show_toggle !== false;\n    toggleSwitch.configValue = 'show_toggle';\n    toggleSwitch.addEventListener('change', this.valueChanged);\n    const toggleLabel = document.createElement('div');\n    toggleLabel.textContent = 'Allow Toggling';\n    toggleRow.appendChild(toggleSwitch);\n    toggleRow.appendChild(toggleLabel);\n    form.appendChild(toggleRow);\n\n    // Add Persist Selection toggle\n    const persistSelectionRow = this._createRow();\n    const persistSelectionSwitch = document.createElement('ha-switch') as HaFormElement;\n    persistSelectionSwitch.checked = this.config.persist_selection !== false;\n    persistSelectionSwitch.configValue = 'persist_selection';\n    persistSelectionSwitch.addEventListener('change', this.valueChanged);\n    const persistSelectionLabel = document.createElement('div');\n    persistSelectionLabel.textContent = 'Remember Selection';\n    persistSelectionRow.appendChild(persistSelectionSwitch);\n    persistSelectionRow.appendChild(persistSelectionLabel);\n    form.appendChild(persistSelectionRow);\n\n    // Auto-select Count field\n    const autoSelectRow = this._createRow();\n    const autoSelectField = document.createElement('ha-textfield') as HaFormElement;\n    autoSelectField.className = 'value';\n    autoSelectField.label = 'Auto-select Count';\n    autoSelectField.type = 'number';\n    autoSelectField.min = '0';\n    autoSelectField.max = '50';\n    autoSelectField.value = String(this.config.auto_select_count || 6);\n    autoSelectField.configValue = 'auto_select_count';\n    autoSelectField.addEventListener('change', this.valueChanged);\n    autoSelectRow.appendChild(autoSelectField);\n    form.appendChild(autoSelectRow);\n\n    // Energy Auto-select Count field\n    const energyAutoSelectRow = this._createRow();\n    const energyAutoSelectField = document.createElement('ha-textfield') as HaFormElement;\n    energyAutoSelectField.className = 'value';\n    energyAutoSelectField.label = 'Energy Auto-select Count';\n    energyAutoSelectField.type = 'number';\n    energyAutoSelectField.min = '0';\n    energyAutoSelectField.max = '50';\n    energyAutoSelectField.value = String(this.config.energy_auto_select_count || 6);\n    energyAutoSelectField.configValue = 'energy_auto_select_count';\n    energyAutoSelectField.addEventListener('change', this.valueChanged);\n    energyAutoSelectRow.appendChild(energyAutoSelectField);\n    form.appendChild(energyAutoSelectRow);\n\n    // Show Energy Section toggle\n    const energySectionRow = this._createRow();\n    const energySectionSwitch = document.createElement('ha-switch') as HaFormElement;\n    energySectionSwitch.checked = this.config.show_energy_section !== false;\n    energySectionSwitch.configValue = 'show_energy_section';\n    energySectionSwitch.addEventListener('change', this.valueChanged);\n    const energySectionLabel = document.createElement('div');\n    energySectionLabel.textContent = 'Show Energy Section';\n    energySectionRow.appendChild(energySectionSwitch);\n    energySectionRow.appendChild(energySectionLabel);\n    form.appendChild(energySectionRow);\n\n    // Max Height field\n    const maxHeightRow = this._createRow();\n    const maxHeightField = document.createElement('ha-textfield') as HaFormElement;\n    maxHeightField.className = 'value';\n    maxHeightField.label = 'Max Height (0 for no limit)';\n    maxHeightField.type = 'number';\n    maxHeightField.min = '0';\n    maxHeightField.max = '1000';\n    maxHeightField.value = String(this.config.max_height || 0);\n    maxHeightField.configValue = 'max_height';\n    maxHeightField.addEventListener('change', this.valueChanged);\n    maxHeightField.helperText = 'Set maximum height in pixels (0 = no limit)';\n    maxHeightField.helperPersistent = true;\n    maxHeightRow.appendChild(maxHeightField);\n    form.appendChild(maxHeightRow);\n  }\n\n  private _createRow(): HTMLDivElement {\n    const row = document.createElement('div');\n    row.className = 'row';\n    return row;\n  }\n}\n\n// Register the editor with the custom elements registry\ncustomElements.define('energy-dashboard-entity-card-editor', EnergyDashboardEntityCardEditor);","import { EnergyDashboardConfig } from './types';\n\nexport interface ChartSeries {\n  entity: string;\n  name: string;\n  color?: string;\n  type?: string; // 'line', 'area', etc.\n  stroke_width?: number;\n  curve?: string; // 'smooth', 'straight'\n  show_points?: boolean;\n}\n\nexport interface ChartAxisOptions {\n  min?: number;\n  max?: number;\n  tickAmount?: number;\n  decimals?: number;\n  title?: string;\n  unit?: string;\n}\n\nexport interface EnergyDashboardChartConfig extends EnergyDashboardConfig {\n  // Chart specific options\n  chart_type: string; // 'line', 'area', 'bar'\n  chart_height: number;\n  show_points: boolean;\n  smooth_curve: boolean;\n  update_interval: number; // In seconds\n  hours_to_show: number;\n  aggregate_func: string; // 'avg', 'min', 'max', 'sum', etc.\n  power_chart_options: {\n    y_axis: ChartAxisOptions;\n    x_axis?: ChartAxisOptions;\n  };\n  energy_chart_options: {\n    y_axis: ChartAxisOptions;\n    x_axis?: ChartAxisOptions;\n  };\n  use_custom_colors: boolean;\n  show_legend: boolean;\n}\n\nexport function getDefaultChartConfig(): Partial<EnergyDashboardChartConfig> {\n  return {\n    chart_type: 'line',\n    chart_height: 300,\n    show_points: false,\n    smooth_curve: true,\n    update_interval: 30, // Set default to 30 seconds\n    hours_to_show: 24,\n    aggregate_func: 'avg',\n    power_chart_options: {\n      y_axis: {\n        min: 0,\n        decimals: 1,\n        title: 'Power',\n        unit: 'W'\n      }\n    },\n    energy_chart_options: {\n      y_axis: {\n        min: 0,\n        decimals: 2,\n        title: 'Energy',\n        unit: 'kWh'\n      }\n    },\n    use_custom_colors: false,\n    show_legend: true\n  };\n}","import { createStyles, cardStyles } from './styles';\nimport { loadToggleStates } from './entity-utils';\nimport { EnergyDashboardChartConfig, getDefaultChartConfig } from './energy-dashboard-chart-config';\n\nexport class EnergyDashboardChartCard extends HTMLElement {\n  // Properties\n  private _hass: any;\n  config?: EnergyDashboardChartConfig;\n  private _root: ShadowRoot;\n  private _powerChartEl: HTMLElement | null = null;\n  private _energyChartEl: HTMLElement | null = null;\n  private _updateTimer: number | null = null;\n  private _powerEntities: string[] = [];\n  private _energyEntities: string[] = [];\n  private _isLoading: boolean = true;\n  private _apexChartCardRegistered: boolean | null = null;\n  private _currentRefreshInterval: number = 30; // Default to 30 seconds\n  private _currentTimeRangeHours: number = 24; // Default to 24 hours\n  private _viewMode: 'power' | 'energy' = 'power'; // Default to power view\n\n  // Define card name and icon for card picker\n  static get cardType() {\n    return 'energy-dashboard-chart-card';\n  }\n\n  static get displayName() {\n    return 'Energy Dashboard Chart';\n  }\n\n  static get description() {\n    return 'Chart companion for the Energy Dashboard Entity Card';\n  }\n\n  static get icon() {\n    return 'mdi:chart-line';\n  }\n\n  constructor() {\n    super();\n    this._root = this.attachShadow({ mode: 'open' });\n    this._root.appendChild(createStyles(cardStyles));\n    \n    // Create the card element\n    const card = document.createElement('ha-card');\n    this._root.appendChild(card);\n  }\n\n  // Load the view mode from localStorage\n  private _loadViewMode(): 'power' | 'energy' {\n    try {\n      const stored = localStorage.getItem('energy-dashboard-view-mode');\n      return (stored === 'power' || stored === 'energy') ? stored : 'power';\n    } catch {\n      return 'power'; // Default to power view if we can't load from localStorage\n    }\n  }\n\n  // Called when the element is added to the DOM\n  connectedCallback() {\n    // Load the selected view mode from localStorage\n    this._viewMode = this._loadViewMode();\n    \n    // Add event listener for view mode changes from entity card\n    window.addEventListener('view-mode-changed', this._handleViewModeChange as EventListener);\n    \n    this._loadSelectedEntities();\n    this._checkApexChartsRegistration();\n    \n    // First update the content without starting the timer\n    this._updateContent();\n    \n    // Cancel and reset any existing timers and configuration\n    this._stopUpdateInterval();\n    \n    // Wait until the content is fully loaded before starting timers\n    // This ensures all chart elements have properly initialized\n    setTimeout(() => {\n      // Only start the update timer if explicitly set\n      if (this._currentRefreshInterval > 0) {\n        this._startUpdateInterval();\n      }\n    }, 1000); // Longer timeout to ensure everything is properly loaded\n  }\n\n  disconnectedCallback() {\n    this._stopUpdateInterval();\n    // Remove event listener when component is removed\n    window.removeEventListener('view-mode-changed', this._handleViewModeChange as EventListener);\n  }\n\n  // Handle view mode changes from entity card\n  private _handleViewModeChange = (event: CustomEvent) => {\n    if (event.detail && event.detail.mode) {\n      this._viewMode = event.detail.mode;\n      console.log(`View mode changed to: ${this._viewMode}`);\n      // Update the chart display based on view mode\n      this._updateContent();\n    }\n  }\n\n  // Home Assistant specific method to set config\n  setConfig(config: Partial<EnergyDashboardChartConfig>) {\n    if (!config) {\n      throw new Error(\"Invalid configuration\");\n    }\n    \n    // Apply default chart config values \n    const defaultConfig = getDefaultChartConfig();\n    \n    // Create a merged config object\n    this.config = {\n      ...defaultConfig,\n      ...config,\n      // Handle nested objects properly\n      power_chart_options: {\n        ...defaultConfig.power_chart_options,\n        ...(config.power_chart_options || {}),\n        y_axis: {\n          ...defaultConfig.power_chart_options?.y_axis,\n          ...(config.power_chart_options?.y_axis || {})\n        }\n      },\n      energy_chart_options: {\n        ...defaultConfig.energy_chart_options,\n        ...(config.energy_chart_options || {}),\n        y_axis: {\n          ...defaultConfig.energy_chart_options?.y_axis,\n          ...(config.energy_chart_options?.y_axis || {})\n        }\n      },\n      // Add base EnergyDashboardConfig properties\n      title: config.title ?? 'Energy Dashboard Chart',\n      show_header: config.show_header ?? true,\n      show_state: config.show_state ?? true,\n      show_toggle: config.show_toggle ?? true,\n      auto_select_count: config.auto_select_count ?? 6,\n      max_height: config.max_height ?? 400,\n      show_energy_section: config.show_energy_section ?? true,\n      energy_auto_select_count: config.energy_auto_select_count ?? 6,\n      // Set update_interval default to 30 seconds if not specified\n      update_interval: config.update_interval ?? 30,\n    } as EnergyDashboardChartConfig;\n    \n    // Set the current refresh interval from config\n    this._currentRefreshInterval = this.config.update_interval ?? 30;\n    this._currentTimeRangeHours = this.config.hours_to_show ?? 24;\n    \n    this._loadSelectedEntities();\n    this._isLoading = true;\n    this._checkApexChartsRegistration();\n  }\n\n  // Home Assistant specific methods\n  static getConfigElement() {\n    return document.createElement('energy-dashboard-chart-card-editor');\n  }\n\n  static getStubConfig() {\n    return {\n      ...getDefaultChartConfig(),\n      title: 'Energy Dashboard Chart',\n      show_header: true,\n      show_energy_section: true,\n    };\n  }\n\n  getCardSize() {\n    return this.config?.chart_height ? Math.ceil(this.config.chart_height / 50) : 6;\n  }\n\n  // Called when Home Assistant updates\n  set hass(hass: any) {\n    const firstUpdate = !this._hass;\n    this._hass = hass;\n    \n    if (firstUpdate) {\n      // When we get hass for the first time, end the loading state\n      this._isLoading = false;\n      this._updateContent();\n    }\n  }\n\n  get hass() {\n    return this._hass;\n  }\n\n  private _loadSelectedEntities() {\n    // Load the toggle states from localStorage to get the entities selected in the entity card\n    const powerToggleStates = loadToggleStates('energy-dashboard-power-toggle-states');\n    const energyToggleStates = loadToggleStates('energy-dashboard-energy-toggle-states');\n\n    if (powerToggleStates) {\n      this._powerEntities = Object.keys(powerToggleStates).filter(\n        entityId => powerToggleStates[entityId]\n      );\n    }\n\n    if (energyToggleStates) {\n      this._energyEntities = Object.keys(energyToggleStates).filter(\n        entityId => energyToggleStates[entityId]\n      );\n    }\n  }\n\n  private _startUpdateInterval() {\n    this._stopUpdateInterval(); // Ensure no duplicate timers\n\n    const seconds = this._currentRefreshInterval;\n\n    if (seconds > 0) {\n      this._updateTimer = window.setInterval(() => {\n        console.log(`Timer triggered: Refreshing charts (Interval: ${seconds}s)`);\n        this._updateCharts();\n      }, seconds * 1000);\n      console.log(`Update timer started with interval: ${seconds}s`);\n    } else {\n      console.log('Update timer not started (interval is 0).');\n    }\n  }\n\n  private _stopUpdateInterval() {\n    if (this._updateTimer !== null) {\n      window.clearInterval(this._updateTimer);\n      this._updateTimer = null;\n      console.log('Update timer stopped.');\n    }\n  }\n\n  private _generateApexchartsConfig(entities: string[], isEnergy: boolean) {\n    if (!this.config || !entities.length || !this._hass) return null;\n\n    const options = isEnergy\n      ? this.config.energy_chart_options\n      : this.config.power_chart_options;\n\n    const chartType = this.config.chart_type || 'line';\n    const hoursToShow = this.config.hours_to_show || 24;\n    const showPoints = this.config.show_points || false;\n    const showLegend = this.config.show_legend !== false;\n    const smoothCurve = this.config.smooth_curve !== false;\n\n    // Strictly minimal series config matching apexcharts-card schema\n    const series = entities.map(entityId => ({\n      entity: entityId,\n      name: this._hass.states[entityId]?.attributes?.friendly_name || entityId\n    }));\n\n    // --- Y Axis Auto-Range Logic ---\n    let yMin = options?.y_axis?.min;\n    let yMax = options?.y_axis?.max;\n    let yTitle = isEnergy ? 'Energy (kWh)' : 'Power (W)';\n    if (options?.y_axis?.title) yTitle = options.y_axis.title;\n\n    // Set minimum to 0 for power (if not specified in config)\n    if (typeof yMin === 'undefined') {\n      yMin = 0;\n    }\n\n    // Calculate appropriate tick amount based on y-axis range\n    let tickAmount = 5; // Default to 5 grid lines\n\n    // For power, we can adjust the tick interval to be nice round numbers\n    if (!isEnergy) {\n      // If we have a fixed max, adjust the tick amount accordingly\n      if (typeof yMax === 'number') {\n        if (yMax <= 500) {\n          tickAmount = 5;  // For 0-500, show ticks at 0, 100, 200, 300, 400, 500\n        } else if (yMax <= 2000) {\n          tickAmount = 10; // For 0-2000, show more ticks\n        } else {\n          tickAmount = 15; // For larger values, use more ticks\n        }\n      } else {\n        // For auto, use a reasonable default\n        tickAmount = 10;\n      }\n    } else {\n      // For energy charts, use fewer ticks by default\n      tickAmount = 5;\n    }\n\n    // Minimal config object matching apexcharts-card schema\n    const apexChartCardConfig = {\n      type: 'custom:apexcharts-card',\n      header: {\n        show: false\n      },\n      graph_span: `${hoursToShow}h`,\n      chart_type: chartType,\n      series,\n      yaxis: [{\n        min: yMin,\n        max: yMax, // Apply max value from config - undefined will be auto\n        decimals: options?.y_axis?.decimals ?? (isEnergy ? 2 : 0) // Default to 2 decimal places for energy, 0 for power\n      }],\n      apex_config: {\n        chart: {\n          height: this.config.chart_height || 300,\n          animations: { enabled: false },\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          }\n        },\n        yaxis: [{\n          tickAmount, \n          forceNiceScale: true, // Force nice rounded intervals\n          title: { text: yTitle },\n          labels: { \n            formatter: (val: number) => val.toFixed(options?.y_axis?.decimals ?? (isEnergy ? 2 : 0))\n          },\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true\n          },\n          grid: {\n            show: true\n          }\n        }],\n        grid: {\n          show: true,\n          borderColor: '#90A4AE30',\n          strokeDashArray: 0,\n          position: 'back',\n          xaxis: {\n            lines: {\n              show: false\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: { size: showPoints ? 4 : 0 },\n        stroke: { curve: smoothCurve ? 'smooth' : 'straight', width: 2 },\n        legend: { show: showLegend }\n      }\n    };\n\n    return apexChartCardConfig;\n  }\n\n  private _createChart(isEnergy: boolean) {\n    if (this._isLoading) {\n      return this._createLoadingIndicator();\n    }\n    \n    const entities = isEnergy ? this._energyEntities : this._powerEntities;\n    \n    if (!entities || entities.length === 0) {\n      return this._createEmptyCard(isEnergy);\n    }\n    \n    if (!this._hass) {\n      return this._createLoadingIndicator();\n    }\n    \n    const chartConfig = this._generateApexchartsConfig(entities, isEnergy);\n    \n    if (!chartConfig) {\n      return this._createErrorMessage(\n        `Failed to generate chart configuration for ${isEnergy ? 'energy' : 'power'} chart`,\n        ['Check that all required entities exist in Home Assistant', \n         'Refresh the page and try again']\n      );\n    }\n    \n    const chartElement = document.createElement('div');\n    chartElement.className = isEnergy ? 'energy-chart-container' : 'power-chart-container';\n    chartElement.style.width = '100%';\n    chartElement.style.marginBottom = '16px';\n    chartElement.style.position = 'relative';\n    chartElement.style.minHeight = `${this.config?.chart_height || 300}px`;\n    \n    try {\n      if (this._apexChartCardRegistered === false) {\n        return this._createErrorMessage(\n          'The apexcharts-card integration is not installed',\n          [\n            'Install the apexcharts-card integration from HACS',\n            'Make sure apexcharts-card is correctly loaded in your Home Assistant instance',\n            'Refresh the page after installation to load the custom element'\n          ]\n        );\n      }\n      \n      const apexCard = document.createElement('apexcharts-card') as HTMLElement;\n      \n      try {\n        (apexCard as any).setConfig(chartConfig);\n        (apexCard as any).hass = this._hass;\n      } catch (configError) {\n        console.error('Error configuring apexcharts-card:', configError);\n        return this._createErrorMessage(\n          'Error configuring chart',\n          ['The chart configuration is invalid', \n           'Check the console for more details']\n        );\n      }\n      \n      chartElement.appendChild(apexCard);\n    } catch (err) {\n      console.error(`Error creating ${isEnergy ? 'energy' : 'power'} chart:`, err);\n      return this._createErrorMessage(\n        `Error: ${err instanceof Error ? err.message : 'Failed to create chart'}`,\n        [\n          'Check that apexcharts-card is installed correctly',\n          'Make sure all entities exist in Home Assistant',\n          'Check the console for more detailed error information'\n        ]\n      );\n    }\n    \n    return chartElement;\n  }\n\n  private _createEmptyCard(isEnergy: boolean) {\n    const container = document.createElement('div');\n    container.className = 'empty-chart-container';\n    container.style.padding = '16px';\n    container.style.textAlign = 'center';\n    container.style.color = 'var(--secondary-text-color)';\n    container.style.height = `${(this.config?.chart_height || 300) - 32}px`;\n    container.style.display = 'flex';\n    container.style.alignItems = 'center';\n    container.style.justifyContent = 'center';\n    container.style.flexDirection = 'column';\n    container.style.border = '1px dashed var(--divider-color)';\n    container.style.borderRadius = '8px';\n    container.style.margin = '8px 16px';\n    \n    const icon = document.createElement('ha-icon');\n    icon.setAttribute('icon', 'mdi:chart-line-variant');\n    icon.style.marginBottom = '8px';\n    icon.style.color = 'var(--secondary-text-color)';\n    icon.style.width = '48px';\n    icon.style.height = '48px';\n    \n    const message = document.createElement('div');\n    message.textContent = `No ${isEnergy ? 'energy' : 'power'} entities selected. Please select entities in the Energy Dashboard Entity Card.`;\n    \n    container.appendChild(icon);\n    container.appendChild(message);\n    return container;\n  }\n\n  private _createLoadingIndicator(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'loading-container';\n    container.style.display = 'flex';\n    container.style.flexDirection = 'column';\n    container.style.alignItems = 'center';\n    container.style.justifyContent = 'center';\n    container.style.height = `${this.config?.chart_height || 200}px`;\n    container.style.width = '100%';\n    container.style.transition = 'opacity 0.3s ease-in-out';\n    \n    const spinner = document.createElement('div');\n    spinner.className = 'loading-spinner';\n    spinner.innerHTML = `\n      <style>\n        @keyframes spinner {\n          to { transform: rotate(360deg); }\n        }\n        .loading-spinner:before {\n          content: '';\n          box-sizing: border-box;\n          position: absolute;\n          width: 30px;\n          height: 30px;\n          border-radius: 50%;\n          border: 2px solid var(--secondary-text-color);\n          border-top-color: var(--primary-color);\n          animation: spinner 0.8s linear infinite;\n        }\n      </style>\n    `;\n    spinner.style.position = 'relative';\n    spinner.style.width = '30px';\n    spinner.style.height = '30px';\n    spinner.style.marginBottom = '16px';\n    \n    const text = document.createElement('div');\n    text.textContent = 'Initializing chart...';\n    text.style.color = 'var(--secondary-text-color)';\n    text.style.fontSize = '0.9em';\n    \n    container.appendChild(spinner);\n    container.appendChild(text);\n    \n    return container;\n  }\n\n  private _createErrorMessage(error: string, suggestions: string[]): HTMLElement {\n    const container = document.createElement('div');\n    container.className = 'error-container';\n    container.style.padding = '16px';\n    container.style.display = 'flex';\n    container.style.flexDirection = 'column';\n    container.style.alignItems = 'center';\n    container.style.justifyContent = 'center';\n    container.style.height = `${(this.config?.chart_height || 200) - 32}px`;\n    container.style.border = '1px dashed var(--error-color, red)';\n    container.style.borderRadius = '8px';\n    container.style.margin = '8px 16px';\n    \n    const icon = document.createElement('ha-icon');\n    icon.setAttribute('icon', 'mdi:alert-circle-outline');\n    icon.style.color = 'var(--error-color, red)';\n    icon.style.width = '40px';\n    icon.style.height = '40px';\n    icon.style.marginBottom = '8px';\n    \n    const errorText = document.createElement('div');\n    errorText.textContent = error;\n    errorText.style.color = 'var(--error-color, red)';\n    errorText.style.fontWeight = 'bold';\n    errorText.style.marginBottom = '8px';\n    \n    const suggestionsList = document.createElement('ul');\n    suggestionsList.style.color = 'var(--secondary-text-color)';\n    suggestionsList.style.textAlign = 'left';\n    suggestionsList.style.margin = '8px 0';\n    suggestionsList.style.paddingLeft = '20px';\n    \n    suggestions.forEach(suggestion => {\n      const item = document.createElement('li');\n      item.textContent = suggestion;\n      item.style.marginBottom = '4px';\n      suggestionsList.appendChild(item);\n    });\n    \n    container.appendChild(icon);\n    container.appendChild(errorText);\n    container.appendChild(suggestionsList);\n    \n    return container;\n  }\n\n  private _updateCharts() {\n    console.log(\"Executing _updateCharts: Updating chart elements.\");\n    if (!this._hass || this._isLoading || this._apexChartCardRegistered === false) {\n      console.log(\"Skipping _updateCharts: Hass not ready, loading, or apexcharts-card not registered.\");\n      return;\n    }\n\n    // Always reload selected entities to ensure we have the latest selection\n    this._loadSelectedEntities();\n\n    const powerChartContainer = this._root.querySelector('.power-chart-placeholder');\n    if (powerChartContainer) {\n      // Check for existing apexcharts-card element\n      const existingPowerChart = powerChartContainer.querySelector('apexcharts-card') as any;\n      \n      if (existingPowerChart) {\n        console.log(\"Refreshing existing power chart.\");\n        \n        // Generate updated chart config with latest entity selections\n        const updatedChartConfig = this._generateApexchartsConfig(this._powerEntities, false);\n        \n        if (updatedChartConfig) {\n          // Update the chart config with latest entity selections\n          try {\n            existingPowerChart.setConfig(updatedChartConfig);\n            existingPowerChart.hass = this._hass;\n          } catch (err) {\n            console.warn(\"Failed to update chart config:\", err);\n          }\n        }\n      } else {\n        console.log(\"Creating new power chart (no existing chart found).\");\n        const newPowerChart = this._createChart(false);\n        powerChartContainer.innerHTML = '';\n        powerChartContainer.appendChild(newPowerChart);\n        this._powerChartEl = newPowerChart;\n      }\n    } else if (!this._powerChartEl) {\n      const card = this._root.querySelector('ha-card .chart-container');\n      if (card) {\n        const powerSectionTitle = card.querySelector('.section-title:not([data-energy])');\n        if (powerSectionTitle) {\n          console.log(\"Creating initial power chart (fallback).\");\n          const placeholder = document.createElement('div');\n          placeholder.className = 'power-chart-placeholder';\n          const newChart = this._createChart(false);\n          placeholder.appendChild(newChart);\n          powerSectionTitle.after(placeholder);\n          this._powerChartEl = newChart;\n        }\n      }\n    }\n\n    const energyChartContainer = this._root.querySelector('.energy-chart-placeholder');\n    if (this.config?.show_energy_section) {\n      if (energyChartContainer) {\n        // Check for existing apexcharts-card element\n        const existingEnergyChart = energyChartContainer.querySelector('apexcharts-card') as any;\n        \n        if (existingEnergyChart) {\n          console.log(\"Refreshing existing energy chart.\");\n          \n          // Generate updated chart config with latest entity selections\n          const updatedChartConfig = this._generateApexchartsConfig(this._energyEntities, true);\n          \n          if (updatedChartConfig) {\n            // Update the chart config with latest entity selections\n            try {\n              existingEnergyChart.setConfig(updatedChartConfig);\n              existingEnergyChart.hass = this._hass;\n            } catch (err) {\n              console.warn(\"Failed to update chart config:\", err);\n            }\n          }\n        } else {\n          console.log(\"Creating new energy chart (no existing chart found).\");\n          const newEnergyChart = this._createChart(true);\n          energyChartContainer.innerHTML = '';\n          energyChartContainer.appendChild(newEnergyChart);\n          this._energyChartEl = newEnergyChart;\n        }\n      } else if (!this._energyChartEl) {\n        const card = this._root.querySelector('ha-card .chart-container');\n        if (card) {\n          const energySectionTitle = card.querySelector('.section-title[data-energy]');\n          if (energySectionTitle) {\n            console.log(\"Creating initial energy chart (fallback).\");\n            const placeholder = document.createElement('div');\n            placeholder.className = 'energy-chart-placeholder';\n            const newChart = this._createChart(true);\n            placeholder.appendChild(newChart);\n            energySectionTitle.after(placeholder);\n            this._energyChartEl = newChart;\n          }\n        }\n      }\n    } else {\n      energyChartContainer?.remove();\n      this._energyChartEl = null;\n      this._root.querySelector('.section-title[data-energy]')?.remove();\n      this._root.querySelector('.section-separator')?.remove();\n    }\n  }\n\n  private _renderSectionTitle(title: string, isEnergy: boolean = false): HTMLElement {\n    const sectionTitle = document.createElement('div');\n    sectionTitle.className = 'section-title';\n    sectionTitle.textContent = title;\n    if (isEnergy) {\n      sectionTitle.dataset.energy = 'true';\n    }\n    sectionTitle.style.padding = '8px 16px';\n    sectionTitle.style.fontSize = 'var(--section-title-font-size, 1rem)';\n    sectionTitle.style.fontWeight = '500';\n    return sectionTitle;\n  }\n\n  private _updateContent() {\n    if (!this.config) {\n      const card = this._root.querySelector('ha-card');\n      if (card) {\n        card.innerHTML = '<div class=\"empty-message\">Card not configured</div>';\n      }\n      return;\n    }\n\n    const card = this._root.querySelector('ha-card');\n    if (!card) return;\n\n    card.innerHTML = '';\n\n    if (this.config.show_header) {\n      const header = document.createElement('div');\n      header.className = 'card-header';\n      header.textContent = this.config.title;\n      card.appendChild(header);\n    }\n\n    if (this._isLoading) {\n      const loadingIndicator = this._createLoadingIndicator();\n      card.appendChild(loadingIndicator);\n      return;\n    }\n\n    if (this._apexChartCardRegistered === false) {\n      const errorMessage = this._createErrorMessage(\n        'The apexcharts-card integration is not installed',\n        [\n          'Install the apexcharts-card integration from HACS',\n          'Make sure apexcharts-card is correctly loaded in your Home Assistant instance',\n          'Refresh the page after installation to load the custom element'\n        ]\n      );\n      card.appendChild(errorMessage);\n      return;\n    }\n    \n    const refreshControls = this._createRefreshControls();\n    card.appendChild(refreshControls);\n\n    const chartContainer = document.createElement('div');\n    chartContainer.className = 'chart-container';\n    chartContainer.style.width = '100%';\n    chartContainer.style.display = 'flex';\n    chartContainer.style.flexDirection = 'column';\n    \n    // Load the view mode from localStorage (in case it changed)\n    this._viewMode = this._loadViewMode();\n    \n    // Only show the appropriate chart based on view mode\n    if (this._viewMode === 'power' || !this.config.show_energy_section) {\n      // Power chart section\n      chartContainer.appendChild(this._renderSectionTitle('Power Consumption'));\n      const powerPlaceholder = document.createElement('div'); \n      powerPlaceholder.className = 'power-chart-placeholder';\n      chartContainer.appendChild(powerPlaceholder);\n      this._powerChartEl = null;\n      \n      // Reset energy chart element so it doesn't get updated\n      this._energyChartEl = null;\n    } else if (this._viewMode === 'energy' && this.config.show_energy_section) {\n      // Energy chart section\n      chartContainer.appendChild(this._renderSectionTitle('Energy Consumption', true));\n      const energyPlaceholder = document.createElement('div'); \n      energyPlaceholder.className = 'energy-chart-placeholder';\n      chartContainer.appendChild(energyPlaceholder);\n      this._energyChartEl = null;\n      \n      // Reset power chart element so it doesn't get updated\n      this._powerChartEl = null;\n    }\n    \n    card.appendChild(chartContainer);\n\n    setTimeout(() => this._updateCharts(), 0);\n    setTimeout(() => this._startUpdateInterval(), 50);\n  }\n\n  private _checkApexChartsRegistration() {\n    if (this._apexChartCardRegistered !== null) return;\n\n    this._isLoading = true;\n\n    setTimeout(() => {\n      this._apexChartCardRegistered = !!customElements.get('apexcharts-card');\n      console.log(`ApexCharts registration check: ${this._apexChartCardRegistered}`);\n      this._isLoading = false;\n      this._updateContent();\n    }, 500);\n  }\n\n  private _setRefreshInterval(seconds: number) {\n    console.log(`Setting refresh interval to: ${seconds} seconds`);\n    if (this.config) {\n      this.config.update_interval = seconds; \n    }\n    this._currentRefreshInterval = seconds;\n    this._updateRefreshControlsUI();\n\n    this._stopUpdateInterval();\n\n    this._updateCharts();\n\n    this._startUpdateInterval();\n  }\n\n  private _setTimeRange(hours: number) {\n    if (this.config) {\n      this.config.hours_to_show = hours;\n    }\n    this._currentTimeRangeHours = hours;\n    this._updateTimeRangeControlsUI();\n    this._updateCharts();\n  }\n\n  private _manualRefresh() {\n    console.log(\"Manual refresh triggered.\");\n    this._updateCharts();\n  }\n  \n  private _createRefreshControls(): HTMLElement {\n    const controlsContainer = document.createElement('div');\n    controlsContainer.className = 'refresh-controls';\n    controlsContainer.style.display = 'flex';\n    controlsContainer.style.justifyContent = 'space-between';\n    controlsContainer.style.alignItems = 'center';\n    controlsContainer.style.padding = '0 16px 8px';\n    controlsContainer.style.gap = '8px';\n    controlsContainer.style.flexWrap = 'wrap';\n\n    // --- Refresh Rate Controls ---\n    const refreshTitle = document.createElement('div');\n    refreshTitle.className = 'refresh-title';\n    refreshTitle.textContent = 'Refresh Rate:';\n    refreshTitle.style.fontWeight = '500';\n    refreshTitle.style.fontSize = '0.9em';\n    refreshTitle.style.marginRight = '8px';\n\n    const buttonsContainer = document.createElement('div');\n    buttonsContainer.className = 'buttons-container';\n    buttonsContainer.style.display = 'flex';\n    buttonsContainer.style.justifyContent = 'flex-end';\n    buttonsContainer.style.alignItems = 'center';\n    buttonsContainer.style.gap = '0'; // Remove gap between buttons\n\n    // --- Time Range Controls ---\n    const timeRangeTitle = document.createElement('div');\n    timeRangeTitle.className = 'time-range-title';\n    timeRangeTitle.textContent = 'Time Range:';\n    timeRangeTitle.style.fontWeight = '500';\n    timeRangeTitle.style.fontSize = '0.9em';\n    timeRangeTitle.style.marginRight = '8px';\n    timeRangeTitle.style.marginLeft = '8px'; // Add left margin\n\n    const timeRangeContainer = document.createElement('div');\n    timeRangeContainer.className = 'time-range-container';\n    timeRangeContainer.style.display = 'flex';\n    timeRangeContainer.style.justifyContent = 'flex-end';\n    timeRangeContainer.style.alignItems = 'center';\n    timeRangeContainer.style.gap = '0'; // Remove gap between buttons\n\n    // --- Max Range Controls ---\n    const maxRangeTitle = document.createElement('div');\n    maxRangeTitle.className = 'y-axis-title';\n    maxRangeTitle.textContent = 'Max Range:';\n    maxRangeTitle.style.fontWeight = '500';\n    maxRangeTitle.style.fontSize = '0.9em';\n    maxRangeTitle.style.marginRight = '8px';\n    maxRangeTitle.style.marginLeft = '8px'; // Add left margin\n\n    const maxRangeContainer = document.createElement('div');\n    maxRangeContainer.className = 'y-axis-container';\n    maxRangeContainer.style.display = 'flex';\n    maxRangeContainer.style.justifyContent = 'flex-end';\n    maxRangeContainer.style.alignItems = 'center';\n    maxRangeContainer.style.gap = '0'; // Remove gap between buttons\n\n    // Helper for all controls\n    const createButton = (text: string, title: string, value?: string, controlType?: 'time' | 'refresh' | 'yaxis', index?: number, total?: number) => {\n      const button = document.createElement('button');\n      button.style.padding = '4px 8px';\n      button.style.border = '1px solid var(--divider-color)';\n      button.style.backgroundColor = 'var(--secondary-background-color)';\n      button.style.color = 'var(--primary-text-color)';\n      button.style.cursor = 'pointer';\n      button.style.display = 'flex';\n      button.style.alignItems = 'center';\n      button.style.justifyContent = 'center';\n      button.style.transition = 'all 0.2s ease-in-out';\n      button.style.minHeight = '28px'; // Slightly smaller\n      button.style.fontSize = '0.9em';\n      button.style.margin = '0';\n      button.style.position = 'relative';\n      button.style.boxSizing = 'border-box'; // Important to include borders in size\n      \n      // Handle button border radius based on position\n      if (index !== undefined && total !== undefined) {\n        // First button - round left corners only\n        if (index === 0) {\n          button.style.borderRadius = '4px 0 0 4px';\n        } \n        // Last button - round right corners only\n        else if (index === total - 1) {\n          button.style.borderRadius = '0 4px 4px 0';\n        } \n        // Middle buttons - no rounded corners\n        else {\n          button.style.borderRadius = '0';\n        }\n        \n        // Apply negative margin to every button except first to overlap borders\n        if (index > 0) {\n          button.style.marginLeft = '-1px';\n        }\n      } else {\n        // Default for refresh button\n        button.style.borderRadius = '4px';\n      }\n      \n      button.title = title;\n      if (text.includes('<ha-icon')) {\n        const iconWrapper = document.createElement('div');\n        iconWrapper.innerHTML = text;\n        while (iconWrapper.firstChild) {\n          button.appendChild(iconWrapper.firstChild);\n        }\n      } else {\n        button.textContent = text;\n      }\n      \n      if (controlType === 'time' && value !== undefined) {\n        button.className = 'time-range-button control-button';\n        button.dataset.hours = value;\n        button.addEventListener('click', () => this._setTimeRange(Number(value)));\n      } else if (controlType === 'refresh' && value !== undefined) {\n        button.className = 'interval-button control-button';\n        button.dataset.seconds = value;\n        button.addEventListener('click', () => this._setRefreshInterval(Number(value)));\n      } else if (controlType === 'yaxis' && value !== undefined) {\n        button.className = 'yaxis-button control-button';\n        button.dataset.yaxis = value;\n        button.addEventListener('click', () => this._setYAxisMax(value));\n      } else {\n        button.className = 'refresh-button control-button';\n        button.addEventListener('click', () => this._manualRefresh());\n      }\n      return button;\n    };\n\n    // Refresh rate buttons\n    const refreshButton = createButton('<ha-icon icon=\"mdi:refresh\"></ha-icon>', 'Refresh now');\n    refreshButton.style.minWidth = '30px'; // Smaller\n    refreshButton.style.width = '30px';\n    refreshButton.style.marginRight = '4px'; // Add space between refresh and interval buttons\n    \n    // Make interval buttons as a single connected group\n    const refreshOptions = [\n      { text: 'Off', title: 'Disable automatic refresh', value: '0' },\n      { text: '15s', title: 'Refresh every 15 seconds', value: '15' },\n      { text: '30s', title: 'Refresh every 30 seconds', value: '30' },\n      { text: '60s', title: 'Refresh every 60 seconds', value: '60' }\n    ];\n    \n    refreshOptions.forEach((option, index) => {\n      const btn = createButton(option.text, option.title, option.value, 'refresh', index, refreshOptions.length);\n      buttonsContainer.appendChild(btn);\n    });\n    \n    buttonsContainer.insertBefore(refreshButton, buttonsContainer.firstChild);\n\n    // Time range buttons (1h, 3h, 12h, 24h, 3d, 1w) as a single connected group\n    const timeRanges = [\n      { label: '1h', hours: 1 },\n      { label: '3h', hours: 3 },\n      { label: '12h', hours: 12 },\n      { label: '24h', hours: 24 },\n      { label: '3d', hours: 72 },\n      { label: '1w', hours: 168 }\n    ];\n    timeRanges.forEach((range, index) => {\n      const btn = createButton(\n        range.label, \n        `Show last ${range.label}`, \n        String(range.hours), \n        'time',\n        index,\n        timeRanges.length\n      );\n      timeRangeContainer.appendChild(btn);\n    });\n\n    // Y-axis preset buttons (Auto, 500, 2000, 3000) as a single connected group\n    const yAxisPresets = [\n      { label: 'Auto', value: 'auto' },\n      { label: '500', value: '500' },\n      { label: '2000', value: '2000' },\n      { label: '3000', value: '3000' }\n    ];\n    yAxisPresets.forEach((preset, index) => {\n      const btn = createButton(\n        preset.label, \n        preset.value === 'auto' ? 'Automatic Y-axis scaling' : `Set Y-axis maximum to ${preset.value}`,\n        preset.value,\n        'yaxis',\n        index,\n        yAxisPresets.length\n      );\n      maxRangeContainer.appendChild(btn);\n    });\n\n    // Single row with all controls\n    const controlsRow = document.createElement('div');\n    controlsRow.className = 'controls-row';\n    controlsRow.style.display = 'flex';\n    controlsRow.style.justifyContent = 'space-between';\n    controlsRow.style.alignItems = 'center';\n    controlsRow.style.width = '100%';\n    controlsRow.style.flexWrap = 'nowrap'; // Prevent wrapping on a single row\n    \n    const refreshGroup = document.createElement('div');\n    refreshGroup.className = 'refresh-group';\n    refreshGroup.style.display = 'flex';\n    refreshGroup.style.alignItems = 'center';\n    refreshGroup.style.flexShrink = '0';\n    refreshGroup.style.marginRight = '8px';\n    refreshGroup.appendChild(refreshTitle);\n    refreshGroup.appendChild(buttonsContainer);\n    \n    const timeRangeGroup = document.createElement('div');\n    timeRangeGroup.className = 'time-range-group';\n    timeRangeGroup.style.display = 'flex';\n    timeRangeGroup.style.alignItems = 'center';\n    timeRangeGroup.style.flexShrink = '0';\n    timeRangeGroup.style.marginRight = '8px';\n    timeRangeGroup.appendChild(timeRangeTitle);\n    timeRangeGroup.appendChild(timeRangeContainer);\n    \n    const maxRangeGroup = document.createElement('div');\n    maxRangeGroup.className = 'y-axis-group';\n    maxRangeGroup.style.display = 'flex';\n    maxRangeGroup.style.alignItems = 'center';\n    maxRangeGroup.style.flexShrink = '0';\n    maxRangeGroup.appendChild(maxRangeTitle);\n    maxRangeGroup.appendChild(maxRangeContainer);\n    \n    controlsRow.appendChild(refreshGroup);\n    controlsRow.appendChild(timeRangeGroup);\n    controlsRow.appendChild(maxRangeGroup);\n    \n    controlsContainer.appendChild(controlsRow);\n\n    this._updateRefreshControlsUI(buttonsContainer);\n    this._updateTimeRangeControlsUI(timeRangeContainer);\n    this._updateYAxisControlsUI(maxRangeContainer);\n\n    return controlsContainer;\n  }\n\n  private _updateRefreshControlsUI(container?: HTMLElement) {\n    const controls = container || this._root.querySelector('.buttons-container');\n    if (!controls) return;\n    const buttons = controls.querySelectorAll('.interval-button');\n    buttons.forEach(btn => {\n      const button = btn as HTMLElement;\n      button.style.backgroundColor = 'var(--secondary-background-color)';\n      button.style.color = 'var(--primary-text-color)';\n      button.style.borderColor = 'var(--divider-color)';\n    });\n    const activeButton = controls.querySelector(`.interval-button[data-seconds=\"${this._currentRefreshInterval}\"]`) as HTMLElement;\n    if (activeButton) {\n      activeButton.style.backgroundColor = 'var(--primary-color)';\n      activeButton.style.color = 'var(--text-primary-color)';\n      activeButton.style.borderColor = 'var(--primary-color)';\n    }\n  }\n\n  private _updateTimeRangeControlsUI(container?: HTMLElement) {\n    const controls = container || this._root.querySelector('.time-range-container');\n    if (!controls) return;\n    const buttons = controls.querySelectorAll('.time-range-button');\n    buttons.forEach(btn => {\n      const button = btn as HTMLElement;\n      button.style.backgroundColor = 'var(--secondary-background-color)';\n      button.style.color = 'var(--primary-text-color)';\n      button.style.borderColor = 'var(--divider-color)';\n    });\n    const activeButton = controls.querySelector(`.time-range-button[data-hours=\"${this._currentTimeRangeHours}\"]`) as HTMLElement;\n    if (activeButton) {\n      activeButton.style.backgroundColor = 'var(--primary-color)';\n      activeButton.style.color = 'var(--text-primary-color)';\n      activeButton.style.borderColor = 'var(--primary-color)';\n    }\n  }\n\n  private _updateYAxisControlsUI(container?: HTMLElement) {\n    const controls = container || this._root.querySelector('.y-axis-container');\n    if (!controls) return;\n\n    // Get the current max value based on the view mode\n    const isEnergy = this._viewMode === 'energy';\n    const currentMax = isEnergy \n      ? (this.config?.energy_chart_options?.y_axis?.max ?? 'auto')\n      : (this.config?.power_chart_options?.y_axis?.max ?? 'auto');\n    \n    // Convert to string for comparison with button data attribute\n    const currentMaxStr = currentMax === undefined ? 'auto' : String(currentMax);\n    \n    const buttons = controls.querySelectorAll('.yaxis-button');\n    buttons.forEach(btn => {\n      const button = btn as HTMLElement;\n      button.style.backgroundColor = 'var(--secondary-background-color)';\n      button.style.color = 'var(--primary-text-color)';\n      button.style.borderColor = 'var(--divider-color)';\n    });\n    \n    // Find the active button by its data-yaxis attribute\n    const activeButton = controls.querySelector(`.yaxis-button[data-yaxis=\"${currentMaxStr}\"]`) as HTMLElement;\n    if (activeButton) {\n      activeButton.style.backgroundColor = 'var(--primary-color)';\n      activeButton.style.color = 'var(--text-primary-color)';\n      activeButton.style.borderColor = 'var(--primary-color)';\n    }\n  }\n\n  private _setYAxisMax(maxValue: string) {\n    if (!this.config) return;\n\n    // Get current view mode\n    const isEnergy = this._viewMode === 'energy';\n    \n    // Update config based on current view mode\n    if (isEnergy) {\n      if (!this.config.energy_chart_options) {\n        this.config.energy_chart_options = { y_axis: {} };\n      }\n      if (!this.config.energy_chart_options.y_axis) {\n        this.config.energy_chart_options.y_axis = {};\n      }\n      \n      // Set max to number or undefined for auto\n      this.config.energy_chart_options.y_axis.max = \n        maxValue === 'auto' ? undefined : Number(maxValue);\n    } else {\n      if (!this.config.power_chart_options) {\n        this.config.power_chart_options = { y_axis: {} };\n      }\n      if (!this.config.power_chart_options.y_axis) {\n        this.config.power_chart_options.y_axis = {};\n      }\n      \n      // Set max to number or undefined for auto\n      this.config.power_chart_options.y_axis.max = \n        maxValue === 'auto' ? undefined : Number(maxValue);\n    }\n    \n    // Update the UI to show the active button\n    this._updateYAxisControlsUI();\n    \n    // Refresh the chart to apply new Y-axis setting\n    this._updateCharts();\n    \n    console.log(`Set Y-axis max to ${maxValue} for ${isEnergy ? 'energy' : 'power'} chart`);\n  }\n}\n\ncustomElements.define('energy-dashboard-chart-card', EnergyDashboardChartCard);","import { EnergyDashboardChartConfig, getDefaultChartConfig } from './energy-dashboard-chart-config';\nimport { createStyles, editorStyles } from './styles';\n\n// Extend HTMLInputElement to include the configValue property\ninterface CustomHTMLInputElement extends HTMLInputElement {\n  configValue?: string;\n}\n\n// Define a type for HA elements used in the editor\ninterface HaFormElement extends HTMLElement {\n  label?: string;\n  value?: string | number | boolean;\n  type?: string;\n  min?: string;\n  max?: string;\n  configValue?: string;\n  checked?: boolean;\n  helperText?: string;\n  helperPersistent?: boolean;\n  options?: Array<{value: string, label: string}>;\n  addEventListener(event: string, handler: (event: Event) => void): void;\n}\n\nexport class EnergyDashboardChartCardEditor extends HTMLElement {\n  // Properties\n  hass: any;\n  config?: EnergyDashboardChartConfig;\n  private _root: ShadowRoot;\n\n  constructor() {\n    super();\n    this._root = this.attachShadow({ mode: 'open' });\n    this._root.appendChild(createStyles(editorStyles));\n    \n    // Create the form container\n    const form = document.createElement('div');\n    form.className = 'form';\n    this._root.appendChild(form);\n  }\n\n  // Called when the element is added to the DOM\n  connectedCallback() {\n    this._updateForm();\n  }\n\n  setConfig(config: Partial<EnergyDashboardChartConfig>) {\n    // Apply default chart config values \n    const defaultConfig = getDefaultChartConfig();\n    \n    // Create a merged config object\n    this.config = {\n      ...defaultConfig,\n      ...config,\n      // Handle nested objects properly\n      power_chart_options: {\n        ...defaultConfig.power_chart_options,\n        ...(config.power_chart_options || {}),\n        y_axis: {\n          ...defaultConfig.power_chart_options?.y_axis,\n          ...(config.power_chart_options?.y_axis || {})\n        }\n      },\n      energy_chart_options: {\n        ...defaultConfig.energy_chart_options,\n        ...(config.energy_chart_options || {}),\n        y_axis: {\n          ...defaultConfig.energy_chart_options?.y_axis,\n          ...(config.energy_chart_options?.y_axis || {})\n        }\n      },\n      // Add base EnergyDashboardConfig properties\n      title: config.title ?? 'Energy Dashboard Chart',\n      show_header: config.show_header ?? true,\n      show_state: config.show_state ?? true,\n      show_toggle: config.show_toggle ?? true,\n      auto_select_count: config.auto_select_count ?? 6,\n      max_height: config.max_height ?? 400,\n      show_energy_section: config.show_energy_section ?? true,\n      energy_auto_select_count: config.energy_auto_select_count ?? 6,\n      show_legend: config.show_legend ?? true,\n    } as EnergyDashboardChartConfig;\n    \n    this._updateForm();\n  }\n\n  valueChanged = (ev: Event) => {\n    if (!this.config) return;\n    \n    const target = ev.target as CustomHTMLInputElement;\n    const configValue = target.configValue;\n    if (!configValue) return;\n\n    let newValue;\n    if (typeof target.checked === 'boolean') {\n      newValue = target.checked;\n    } else if (target.value !== undefined) {\n      if (target.type === 'number') {\n        newValue = Number(target.value);\n      } else {\n        newValue = target.value;\n      }\n    }\n\n    // Handle nested properties like power_chart_options.y_axis.title\n    if (configValue.includes('.')) {\n      const parts = configValue.split('.');\n      const newConfig = { ...this.config };\n      let currentObj: any = newConfig;\n      \n      for (let i = 0; i < parts.length - 1; i++) {\n        const part = parts[i];\n        if (!currentObj[part]) currentObj[part] = {};\n        currentObj[part] = { ...currentObj[part] };\n        currentObj = currentObj[part];\n      }\n      \n      currentObj[parts[parts.length - 1]] = newValue;\n      this.dispatchEvent(new CustomEvent('config-changed', {\n        detail: { config: newConfig },\n        bubbles: true,\n        composed: true\n      }));\n      return;\n    }\n\n    if (this.config[configValue] === newValue) return;\n\n    const newConfig = {\n      ...this.config,\n      [configValue]: newValue\n    };\n\n    this.dispatchEvent(new CustomEvent('config-changed', {\n      detail: { config: newConfig },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  private _updateForm() {\n    if (!this.config) return;\n\n    // Get or create the form element\n    let form = this._root.querySelector('.form');\n    if (!form) {\n      form = document.createElement('div');\n      form.className = 'form';\n      this._root.appendChild(form);\n    }\n    form.innerHTML = '';\n\n    // SECTION: General Settings\n    this._addSectionTitle(form as HTMLElement, 'General Settings');\n\n    // Title field\n    const titleRow = this._createRow();\n    const titleField = document.createElement('ha-textfield') as HaFormElement;\n    titleField.className = 'value';\n    titleField.label = 'Title';\n    titleField.value = this.config.title || 'Energy Dashboard Chart';\n    titleField.configValue = 'title';\n    titleField.addEventListener('change', this.valueChanged);\n    titleRow.appendChild(titleField);\n    form.appendChild(titleRow);\n\n    // Show Header toggle\n    const headerRow = this._createRow();\n    const headerSwitch = document.createElement('ha-switch') as HaFormElement;\n    headerSwitch.checked = this.config.show_header !== false;\n    headerSwitch.configValue = 'show_header';\n    headerSwitch.addEventListener('change', this.valueChanged);\n    const headerLabel = document.createElement('div');\n    headerLabel.textContent = 'Show Header';\n    headerRow.appendChild(headerSwitch);\n    headerRow.appendChild(headerLabel);\n    form.appendChild(headerRow);\n\n    // Show Energy Section toggle\n    const energySectionRow = this._createRow();\n    const energySectionSwitch = document.createElement('ha-switch') as HaFormElement;\n    energySectionSwitch.checked = this.config.show_energy_section !== false;\n    energySectionSwitch.configValue = 'show_energy_section';\n    energySectionSwitch.addEventListener('change', this.valueChanged);\n    const energySectionLabel = document.createElement('div');\n    energySectionLabel.textContent = 'Show Energy Section';\n    energySectionRow.appendChild(energySectionSwitch);\n    energySectionRow.appendChild(energySectionLabel);\n    form.appendChild(energySectionRow);\n\n    // SECTION: Chart Settings\n    this._addSectionTitle(form as HTMLElement, 'Chart Settings');\n\n    // Chart Type dropdown\n    const chartTypeRow = this._createRow();\n    const chartTypeField = document.createElement('ha-select') as HaFormElement;\n    chartTypeField.className = 'value';\n    chartTypeField.label = 'Chart Type';\n    chartTypeField.configValue = 'chart_type';\n    \n    // Set options for the chart type dropdown\n    chartTypeField.options = [\n      { value: 'line', label: 'Line' },\n      { value: 'area', label: 'Area' },\n      { value: 'bar', label: 'Bar' }\n    ];\n    \n    chartTypeField.value = this.config.chart_type || 'line';\n    chartTypeField.addEventListener('change', this.valueChanged);\n    chartTypeRow.appendChild(chartTypeField);\n    form.appendChild(chartTypeRow);\n\n    // Chart Height field\n    const chartHeightRow = this._createRow();\n    const chartHeightField = document.createElement('ha-textfield') as HaFormElement;\n    chartHeightField.className = 'value';\n    chartHeightField.label = 'Chart Height (pixels)';\n    chartHeightField.type = 'number';\n    chartHeightField.min = '100';\n    chartHeightField.max = '1000';\n    chartHeightField.value = String(this.config.chart_height || 300);\n    chartHeightField.configValue = 'chart_height';\n    chartHeightField.addEventListener('change', this.valueChanged);\n    chartHeightRow.appendChild(chartHeightField);\n    form.appendChild(chartHeightRow);\n\n    // Hours to Show field\n    const hoursToShowRow = this._createRow();\n    const hoursToShowField = document.createElement('ha-textfield') as HaFormElement;\n    hoursToShowField.className = 'value';\n    hoursToShowField.label = 'Hours to Show';\n    hoursToShowField.type = 'number';\n    hoursToShowField.min = '1';\n    hoursToShowField.max = '168'; // 7 days\n    hoursToShowField.value = String(this.config.hours_to_show || 24);\n    hoursToShowField.configValue = 'hours_to_show';\n    hoursToShowField.addEventListener('change', this.valueChanged);\n    hoursToShowRow.appendChild(hoursToShowField);\n    form.appendChild(hoursToShowRow);\n\n    // Show Points toggle\n    const showPointsRow = this._createRow();\n    const showPointsSwitch = document.createElement('ha-switch') as HaFormElement;\n    showPointsSwitch.checked = this.config.show_points === true;\n    showPointsSwitch.configValue = 'show_points';\n    showPointsSwitch.addEventListener('change', this.valueChanged);\n    const showPointsLabel = document.createElement('div');\n    showPointsLabel.textContent = 'Show Data Points';\n    showPointsRow.appendChild(showPointsSwitch);\n    showPointsRow.appendChild(showPointsLabel);\n    form.appendChild(showPointsRow);\n\n    // Smooth Curve toggle\n    const smoothCurveRow = this._createRow();\n    const smoothCurveSwitch = document.createElement('ha-switch') as HaFormElement;\n    smoothCurveSwitch.checked = this.config.smooth_curve !== false;\n    smoothCurveSwitch.configValue = 'smooth_curve';\n    smoothCurveSwitch.addEventListener('change', this.valueChanged);\n    const smoothCurveLabel = document.createElement('div');\n    smoothCurveLabel.textContent = 'Smooth Curve';\n    smoothCurveRow.appendChild(smoothCurveSwitch);\n    smoothCurveRow.appendChild(smoothCurveLabel);\n    form.appendChild(smoothCurveRow);\n\n    // Show Legend toggle\n    const showLegendRow = this._createRow();\n    const showLegendSwitch = document.createElement('ha-switch') as HaFormElement;\n    showLegendSwitch.checked = this.config.show_legend !== false;\n    showLegendSwitch.configValue = 'show_legend';\n    showLegendSwitch.addEventListener('change', this.valueChanged);\n    const showLegendLabel = document.createElement('div');\n    showLegendLabel.textContent = 'Show Legend';\n    showLegendRow.appendChild(showLegendSwitch);\n    showLegendRow.appendChild(showLegendLabel);\n    form.appendChild(showLegendRow);\n\n    // Use Custom Colors toggle\n    const customColorsRow = this._createRow();\n    const customColorsSwitch = document.createElement('ha-switch') as HaFormElement;\n    customColorsSwitch.checked = this.config.use_custom_colors === true;\n    customColorsSwitch.configValue = 'use_custom_colors';\n    customColorsSwitch.addEventListener('change', this.valueChanged);\n    const customColorsLabel = document.createElement('div');\n    customColorsLabel.textContent = 'Use Custom Colors';\n    customColorsRow.appendChild(customColorsSwitch);\n    customColorsRow.appendChild(customColorsLabel);\n    form.appendChild(customColorsRow);\n\n    // Aggregate Function dropdown\n    const aggregateRow = this._createRow();\n    const aggregateField = document.createElement('ha-select') as HaFormElement;\n    aggregateField.className = 'value';\n    aggregateField.label = 'Aggregate Function';\n    aggregateField.configValue = 'aggregate_func';\n    \n    // Set options for the aggregate function dropdown\n    aggregateField.options = [\n      { value: 'avg', label: 'Average' },\n      { value: 'min', label: 'Minimum' },\n      { value: 'max', label: 'Maximum' },\n      { value: 'sum', label: 'Sum' },\n      { value: 'first', label: 'First' },\n      { value: 'last', label: 'Last' }\n    ];\n    \n    aggregateField.value = this.config.aggregate_func || 'avg';\n    aggregateField.addEventListener('change', this.valueChanged);\n    aggregateRow.appendChild(aggregateField);\n    form.appendChild(aggregateRow);\n\n    // SECTION: Power Chart Settings\n    this._addSectionTitle(form as HTMLElement, 'Power Chart Y-Axis Settings');\n\n    // Power Y-Axis Title\n    const powerYTitleRow = this._createRow();\n    const powerYTitleField = document.createElement('ha-textfield') as HaFormElement;\n    powerYTitleField.className = 'value';\n    powerYTitleField.label = 'Y-Axis Title';\n    powerYTitleField.value = this.config.power_chart_options?.y_axis?.title || 'Power';\n    powerYTitleField.configValue = 'power_chart_options.y_axis.title';\n    powerYTitleField.addEventListener('change', this.valueChanged);\n    powerYTitleRow.appendChild(powerYTitleField);\n    form.appendChild(powerYTitleRow);\n\n    // Power Y-Axis Unit\n    const powerYUnitRow = this._createRow();\n    const powerYUnitField = document.createElement('ha-textfield') as HaFormElement;\n    powerYUnitField.className = 'value';\n    powerYUnitField.label = 'Y-Axis Unit';\n    powerYUnitField.value = this.config.power_chart_options?.y_axis?.unit || 'W';\n    powerYUnitField.configValue = 'power_chart_options.y_axis.unit';\n    powerYUnitField.addEventListener('change', this.valueChanged);\n    powerYUnitRow.appendChild(powerYUnitField);\n    form.appendChild(powerYUnitRow);\n\n    // Power Y-Axis Decimals\n    const powerYDecimalsRow = this._createRow();\n    const powerYDecimalsField = document.createElement('ha-textfield') as HaFormElement;\n    powerYDecimalsField.className = 'value';\n    powerYDecimalsField.label = 'Y-Axis Decimals';\n    powerYDecimalsField.type = 'number';\n    powerYDecimalsField.min = '0';\n    powerYDecimalsField.max = '5';\n    powerYDecimalsField.value = String(this.config.power_chart_options?.y_axis?.decimals ?? 1);\n    powerYDecimalsField.configValue = 'power_chart_options.y_axis.decimals';\n    powerYDecimalsField.addEventListener('change', this.valueChanged);\n    powerYDecimalsRow.appendChild(powerYDecimalsField);\n    form.appendChild(powerYDecimalsRow);\n\n    // Power Y-Axis Min\n    const powerYMinRow = this._createRow();\n    const powerYMinField = document.createElement('ha-textfield') as HaFormElement;\n    powerYMinField.className = 'value';\n    powerYMinField.label = 'Y-Axis Minimum (empty for auto)';\n    powerYMinField.type = 'number';\n    powerYMinField.value = this.config.power_chart_options?.y_axis?.min !== undefined ? \n      String(this.config.power_chart_options.y_axis.min) : '';\n    powerYMinField.configValue = 'power_chart_options.y_axis.min';\n    powerYMinField.addEventListener('change', this.valueChanged);\n    powerYMinRow.appendChild(powerYMinField);\n    form.appendChild(powerYMinRow);\n\n    // Power Y-Axis Max\n    const powerYMaxRow = this._createRow();\n    const powerYMaxField = document.createElement('ha-textfield') as HaFormElement;\n    powerYMaxField.className = 'value';\n    powerYMaxField.label = 'Y-Axis Maximum (empty for auto)';\n    powerYMaxField.type = 'number';\n    powerYMaxField.value = this.config.power_chart_options?.y_axis?.max !== undefined ? \n      String(this.config.power_chart_options.y_axis.max) : '';\n    powerYMaxField.configValue = 'power_chart_options.y_axis.max';\n    powerYMaxField.addEventListener('change', this.valueChanged);\n    powerYMaxRow.appendChild(powerYMaxField);\n    form.appendChild(powerYMaxRow);\n\n    // Only show Energy Chart settings if energy section is enabled\n    if (this.config.show_energy_section) {\n      // SECTION: Energy Chart Settings\n      this._addSectionTitle(form as HTMLElement, 'Energy Chart Y-Axis Settings');\n\n      // Energy Y-Axis Title\n      const energyYTitleRow = this._createRow();\n      const energyYTitleField = document.createElement('ha-textfield') as HaFormElement;\n      energyYTitleField.className = 'value';\n      energyYTitleField.label = 'Y-Axis Title';\n      energyYTitleField.value = this.config.energy_chart_options?.y_axis?.title || 'Energy';\n      energyYTitleField.configValue = 'energy_chart_options.y_axis.title';\n      energyYTitleField.addEventListener('change', this.valueChanged);\n      energyYTitleRow.appendChild(energyYTitleField);\n      form.appendChild(energyYTitleRow);\n\n      // Energy Y-Axis Unit\n      const energyYUnitRow = this._createRow();\n      const energyYUnitField = document.createElement('ha-textfield') as HaFormElement;\n      energyYUnitField.className = 'value';\n      energyYUnitField.label = 'Y-Axis Unit';\n      energyYUnitField.value = this.config.energy_chart_options?.y_axis?.unit || 'kWh';\n      energyYUnitField.configValue = 'energy_chart_options.y_axis.unit';\n      energyYUnitField.addEventListener('change', this.valueChanged);\n      energyYUnitRow.appendChild(energyYUnitField);\n      form.appendChild(energyYUnitRow);\n\n      // Energy Y-Axis Decimals\n      const energyYDecimalsRow = this._createRow();\n      const energyYDecimalsField = document.createElement('ha-textfield') as HaFormElement;\n      energyYDecimalsField.className = 'value';\n      energyYDecimalsField.label = 'Y-Axis Decimals';\n      energyYDecimalsField.type = 'number';\n      energyYDecimalsField.min = '0';\n      energyYDecimalsField.max = '5';\n      energyYDecimalsField.value = String(this.config.energy_chart_options?.y_axis?.decimals ?? 2);\n      energyYDecimalsField.configValue = 'energy_chart_options.y_axis.decimals';\n      energyYDecimalsField.addEventListener('change', this.valueChanged);\n      energyYDecimalsRow.appendChild(energyYDecimalsField);\n      form.appendChild(energyYDecimalsRow);\n\n      // Energy Y-Axis Min\n      const energyYMinRow = this._createRow();\n      const energyYMinField = document.createElement('ha-textfield') as HaFormElement;\n      energyYMinField.className = 'value';\n      energyYMinField.label = 'Y-Axis Minimum (empty for auto)';\n      energyYMinField.type = 'number';\n      energyYMinField.value = this.config.energy_chart_options?.y_axis?.min !== undefined ? \n        String(this.config.energy_chart_options.y_axis.min) : '';\n      energyYMinField.configValue = 'energy_chart_options.y_axis.min';\n      energyYMinField.addEventListener('change', this.valueChanged);\n      energyYMinRow.appendChild(energyYMinField);\n      form.appendChild(energyYMinRow);\n\n      // Energy Y-Axis Max\n      const energyYMaxRow = this._createRow();\n      const energyYMaxField = document.createElement('ha-textfield') as HaFormElement;\n      energyYMaxField.className = 'value';\n      energyYMaxField.label = 'Y-Axis Maximum (empty for auto)';\n      energyYMaxField.type = 'number';\n      energyYMaxField.value = this.config.energy_chart_options?.y_axis?.max !== undefined ? \n        String(this.config.energy_chart_options.y_axis.max) : '';\n      energyYMaxField.configValue = 'energy_chart_options.y_axis.max';\n      energyYMaxField.addEventListener('change', this.valueChanged);\n      energyYMaxRow.appendChild(energyYMaxField);\n      form.appendChild(energyYMaxRow);\n    }\n  }\n\n  private _createRow(): HTMLDivElement {\n    const row = document.createElement('div');\n    row.className = 'row';\n    return row;\n  }\n\n  private _addSectionTitle(parent: HTMLElement, title: string) {\n    const titleEl = document.createElement('div');\n    titleEl.className = 'title';\n    titleEl.textContent = title;\n    parent.appendChild(titleEl);\n  }\n}\n\n// Register the editor with the custom elements registry\ncustomElements.define('energy-dashboard-chart-card-editor', EnergyDashboardChartCardEditor);","import { EnergyDashboardEntityCard } from './energy-dashboard-entity-card';\nimport { EnergyDashboardChartCard } from './energy-dashboard-chart-card';\n\n// This file is specifically for registering the card with Home Assistant's card picker UI\n\n// Define the customCards property for window\ndeclare global {\n  interface Window {\n    customCards: Array<{\n      type: string;\n      name: string;\n      description: string;\n      preview: boolean;\n      documentationURL?: string;\n    }>;\n  }\n}\n\n// Provide card information to the Home Assistant card catalog\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: 'energy-dashboard-entity-card',\n  name: EnergyDashboardEntityCard.displayName,\n  description: EnergyDashboardEntityCard.description,\n  preview: false,\n  documentationURL: 'https://github.com/bballdavis/Hass-Energy-Dashboard'\n});\n\n// Add the chart card to the Home Assistant card catalog\nwindow.customCards.push({\n  type: 'energy-dashboard-chart-card',\n  name: EnergyDashboardChartCard.displayName,\n  description: EnergyDashboardChartCard.description,\n  preview: false,\n  documentationURL: 'https://github.com/bballdavis/Hass-Energy-Dashboard'\n});"],"names":[],"mappings":"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"}